{"version":3,"sources":["components/Navbar.jsx","components/Router.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","TopBarProgress","config","barColors","0","shadowBlur","BlowFish","Loadable","loader","loading","Hash","AES","Asymmetric","Symmetric","AdvancedFile","NotFound","Router","path","component","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGaA,EAAS,WACpB,OACE,qBAAKC,UAAU,iDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,4BAGA,wBACED,UAAU,iBACVE,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMP,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,SACE,qBAAIR,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,GAAG,IACHQ,gBAAgB,SAChBC,OAAO,EAJT,yBASF,oBAAIV,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,OAAOQ,gBAAgB,SAAxD,mBAIF,oBAAIT,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,GAAG,YACHQ,gBAAgB,SAHlB,wBAQF,oBAAIT,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,GAAG,cACHQ,gBAAgB,SAHlB,mBAQF,oBAAIT,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,GAAG,QACHQ,gBAAgB,SAHlB,oBAQF,oBAAIT,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,GAAG,iBACHQ,gBAAgB,SAHlB,wC,uCC7DdE,IAAeC,OAAO,CACpBC,UAAW,CACTC,EAAG,UACH,MAAO,WAETC,WAAY,IAGd,IAAMC,EAAWC,IAAS,CACxBC,OAAQ,kBAAM,4DACdC,QAASR,MAGLS,EAAOH,IAAS,CACpBC,OAAQ,kBAAM,sDACdC,QAASR,MAGLU,EAAMJ,IAAS,CACnBC,OAAQ,kBAAM,4DACdC,QAASR,MAGLW,EAAaL,IAAS,CAC1BC,OAAQ,kBAAM,6DACdC,QAASR,MAGLY,EAAYN,IAAS,CACzBC,OAAQ,kBAAM,4DACdC,QAASR,MAGLa,EAAeP,IAAS,CAC5BC,OAAQ,kBAAM,mEACdC,QAASR,MAGLc,EAAWR,IAAS,CACxBC,OAAQ,kBAAM,gCACdC,QAASR,MAiBIe,EAdA,WACb,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,UAAWP,IAC9B,cAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWZ,IACnC,cAAC,IAAD,CAAOW,KAAK,cAAcC,UAAWN,IACrC,cAAC,IAAD,CAAOK,KAAK,QAAQC,UAAWR,IAC/B,cAAC,IAAD,CAAOO,KAAK,iBAAiBC,UAAWJ,IACxC,cAAC,IAAD,CAAOd,OAAK,EAACiB,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWH,QCjClBI,EApBH,WACV,OACE,qCACE,cAAC,IAAD,CACEC,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,cAAC,EAAD,IACA,cAAC,EAAD,QCPSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24efc776.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav className='navbar fixed-top navbar-expand-lg navbar-light'>\n      <div className='container-fluid'>\n        <Link className='navbar-brand' to='/'>\n          APP ENCRYPTION\n        </Link>\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-bs-toggle='collapse'\n          data-bs-target='#navbarSupportedContent'\n          aria-controls='navbarSupportedContent'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n        >\n          <span className='navbar-toggler-icon'></span>\n        </button>\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n          <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/'\n                activeClassName='active'\n                exact={true}\n              >\n                Symmetric\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink className='nav-link' to='/aes' activeClassName='active'>\n                AES\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/blowfish'\n                activeClassName='active'\n              >\n                Blowfish\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/asymmetric'\n                activeClassName='active'\n              >\n                RSA\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/hash'\n                activeClassName='active'\n              >\n                Hash\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/advanced-file'\n                activeClassName='active'\n              >\n                Advanced Tool\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport TopBarProgress from 'react-topbar-progress-indicator';\n\nTopBarProgress.config({\n  barColors: {\n    0: '#4a77f3',\n    '1.0': '#4a77f3',\n  },\n  shadowBlur: 5,\n});\n\nconst BlowFish = Loadable({\n  loader: () => import('./blowfish/BlowFish'),\n  loading: TopBarProgress,\n});\n\nconst Hash = Loadable({\n  loader: () => import('./hash/Hash'),\n  loading: TopBarProgress,\n});\n\nconst AES = Loadable({\n  loader: () => import('./aes/AES'),\n  loading: TopBarProgress,\n});\n\nconst Asymmetric = Loadable({\n  loader: () => import('./asymmetric/Asymmetric'),\n  loading: TopBarProgress,\n});\n\nconst Symmetric = Loadable({\n  loader: () => import('./symmetric/Symmetric'),\n  loading: TopBarProgress,\n});\n\nconst AdvancedFile = Loadable({\n  loader: () => import('./advanced/AdvancedFile'),\n  loading: TopBarProgress,\n});\n\nconst NotFound = Loadable({\n  loader: () => import('./NotFound'),\n  loading: TopBarProgress,\n});\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path='/aes' component={AES} />\n      <Route path='/blowfish' component={BlowFish} />\n      <Route path='/asymmetric' component={Asymmetric} />\n      <Route path='/hash' component={Hash} />\n      <Route path='/advanced-file' component={AdvancedFile} />\n      <Route exact path='/' component={Symmetric} />\n      <Route path='*' component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { ToastContainer } from 'react-toastify';\nimport { Navbar } from './components/Navbar';\nimport Router from './components/Router';\n\nconst App = () => {\n  return (\n    <>\n      <ToastContainer\n        position='top-center'\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Navbar />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './dropzone.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}