{"version":3,"sources":["components/hooks/AlgoSymmetric.jsx","validations/symmetric.schema.js","components/symmetric/SymmetricText.jsx","components/symmetric/SymmetricFile.jsx","components/symmetric/Symmetric.jsx","components/common/Button.jsx","utils/string.util.js","components/common/Input.jsx","components/common/Form.jsx","services/base-http.service.js","components/common/Select.jsx","components/common/InputFile.jsx","components/common/Clipboard.jsx","services/file.service.js","components/common/Textarea.jsx","components/common/RadioButton.jsx","services/symmertric.service.js","components/common/ProgressBar.jsx","components/common/FileUpload.jsx","components/common/ItemDownload.jsx","components/common/DownloadList.jsx"],"names":["useAlgoSymmetric","useState","algorithms","setAlgorithms","status","setStatus","useEffect","a","getListAlgorithm","listAlgorithms","data","toast","error","message","name","isBuffer","length","typeMessage","calculatorLength","values","algoInfo","find","cipher","id","algorithm","keyLength","ivLength","isHexKey","isHexIv","key","iv","isHasIV","hasOwnProperty","Buffer","alloc","toString","BaseSchema","schema","Joi","object","string","required","messages","boolean","min","max","keys","optional","FileSymmetricSchema","files","any","TextSymmetricSchema","text","Symmetric","listMode","checked","showIV","setShowIV","result","setResult","errors","setErrors","sizeValues","setSizeValues","setValues","encrypt","decrypt","statusLoading","setStatusLoading","styleIV","useSpring","opacity","config","stiff","algo","sizes","Number","schemaText","handleChange","input","currentTarget","errorsData","validateProperty","value","handleEncrypt","validateForm","encryptText","response","setTimeout","handleDecrypt","decryptText","handleChecked","handleGeneator","property","mode","charAt","toUpperCase","slice","randomBytes","generateRandomString","handleGetKeyValue","getKeyValue","className","Textarea","label","isHasCopy","onChange","Select","options","Input","onGetFile","RadioButton","radios","isEnableGen","onGenerate","div","style","Button","size","marginRight","isLoading","onClick","SymmetricFile","downloadListRef","useRef","downloadLinks","setDownloadLinks","percentage","setPercentage","progress","setProgress","styleDownloadList","schemaFiles","encryptFile","event","Math","round","loaded","total","listDownloadFile","filter","file","some","item","fileName","listDownload","scrollToRef","decryptFile","paddingTop","FileUpload","onGetFiles","listFiles","ref","DownloadList","list","onRemove","newFiles","splice","indexOf","onRemoveAll","tab","setTab","styleText","styleFile","handleChangeTab","SymmetricText","color","rest","classBtn","type","disabled","role","aria-hidden","characters","i","push","floor","random","join","substring","formatBytes","bytes","decimals","k","dm","log","parseFloat","pow","toFixed","nameFile","styles","txt","htmlFor","refElement","extract","validate","details","abortEarly","path","window","scrollTo","top","current","offsetTop","left","behavior","axios","interceptors","use","staus","Promise","reject","formData","FormData","append","post","api","headers","all","get","patch","delete","statusIcon","marginLeft","icon","faExclamationTriangle","map","option","InputFile","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","faUpload","Clipboard","title","data-bs-original-title","e","select","document","execCommand","success","autoClose","hideProgressBar","uploadFilesSymmetric","url","payload","onUploadProgress","forEach","index","http","uploadFilesAsymmetric","passphrase","isPublicKey","uploadFilesAdvanced","symKey","console","downloadFile","onDownloadProgress","responseType","rows","txa","radio","defaultChecked","apiEndpoint","ProgressBar","classProgress","width","aria-valuenow","aria-valuemin","aria-valuemax","setListFiles","styleError","styleListFiles","styleProgressBar","listTransitions","useTransition","gentle","from","height","transform","enter","leave","onDrop","useCallback","handleRemove","li","wordBreak","faFileUpload","faTimes","textAlign","faCloudUploadAlt","display","fontSize","ItemDownload","then","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","catch","err","faFileDownload","linkDownload"],"mappings":"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","file":"static/js/6.bcb72475.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getListAlgorithm } from '../../services/symmertric.service';\nimport { toast } from 'react-toastify';\n\nconst useAlgoSymmetric = () => {\n  const [algorithms, setAlgorithms] = useState([]);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setStatus('loading');\n        const listAlgorithms = await getListAlgorithm();\n        setAlgorithms(listAlgorithms.data);\n        setStatus('done');\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n        setStatus('error');\n      }\n    })();\n  }, []);\n  return [status, algorithms];\n};\n\nexport { useAlgoSymmetric };\n","import Joi from 'joi';\n\nconst message = (name, isBuffer, length) => {\n  if (length === 0) return '\"algorithm\" is required';\n  const typeMessage = isBuffer ? 'hex characters' : 'bytes';\n  return `\"${name}\" is not valid. Key must be {#limit} ${typeMessage}`;\n};\n\nconst calculatorLength = (algorithms, values) => {\n  const algoInfo = algorithms.find((cipher) => cipher.id === values.algorithm);\n  if (!algoInfo)\n    return { keyLength: 0, ivLength: 0, isHexKey: false, isHexIv: false };\n  const { key, isHexKey, iv, isHexIv } = values;\n  const isHasIV = algoInfo.hasOwnProperty('ivLength');\n\n  const keyLength =\n    key && isHexKey\n      ? Buffer.alloc(algoInfo.keyLength).toString('hex').length\n      : algoInfo.keyLength;\n\n  const ivLength =\n    iv && isHasIV && isHexIv // case has iv and iv is hex string\n      ? Buffer.alloc(algoInfo.ivLength).toString('hex').length\n      : isHasIV // case has iv and iv is normal string\n      ? algoInfo.ivLength\n        : 0;\n  return { keyLength, ivLength, isHexKey, isHexIv };\n};\n\nconst BaseSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  // Original Schema\n  const schema = Joi.object({\n    algorithm: Joi.string().required().messages({\n      'string.base': `\"algorithm\" should be a type of 'text'`,\n      'any.required': `\"algorithm' is not allowed to be empty`,\n    }),\n    isHexKey: Joi.boolean().required(),\n    isHexIv: Joi.boolean(),\n    key: Joi.string()\n      .required()\n      .min(keyLength)\n      .max(keyLength)\n      // .when('isHexKey', {\n      //   is: true,\n      //   then: Joi.string().hex(),\n      // })\n\n      .messages({\n        'string.base': `\"key\" should be a type of 'text'`,\n        'string.max': message('key', isHexKey, keyLength),\n        'string.min': message('key', isHexKey, keyLength),\n        'string.hex': `\"key\" is not a valid hexadecimal string`,\n        'any.required': `\"key\" is not allowed to be empty`,\n      }),\n  });\n\n  if (ivLength === 0)\n    return schema.keys({\n      iv: Joi.optional(),\n    });\n  return schema\n    .keys({\n      iv: Joi.string().min(ivLength).max(ivLength)\n      // iv: Joi.when(isHexIv, {\n      //   is: Joi.exist().valid(true),\n      //   then: Joi.string().min(ivLength).max(ivLength).hex(),\n      //   otherwise: Joi.string().min(ivLength).max(ivLength),\n      // }),\n    })\n    .messages({\n      'string.base': `\"iv\" should be a type of 'text'`,\n      'string.max': message('iv', isHexIv),\n      'string.min': message('iv', isHexIv),\n      'string.hex': `\"iv\" is not a valid hexadecimal string`,\n      'any.required': `\"iv\" is not allowed to be empty`,\n    });\n};\n\nconst FileSymmetricSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    files: Joi.any().required(),\n  });\n};\n\nconst TextSymmetricSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    text: Joi.string().required().messages({\n      'string.base': `\"text\" should be a type of 'text'`,\n      'any.required': `\"text\" is not allowed to be empty`,\n    }),\n  });\n};\n\nexport { calculatorLength, TextSymmetricSchema, FileSymmetricSchema };\n","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport {\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  TextSymmetricSchema,\n} from '../../validations/symmetric.schema';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nexport function Symmetric() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n\n  const [status, algorithms] = useAlgoSymmetric();\n  const [showIV, setShowIV] = useState(false);\n  const [result, setResult] = useState('');\n  const [errors, setErrors] = useState({});\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    text: '',\n    key: '',\n    algorithm: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const schemaText = TextSymmetricSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const response = await encryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const response = await decryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL SYMMETRIC ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='text'\n              error={errors['text']}\n              isHasCopy={values.text !== ''}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.algorithm !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.algorithm !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <Textarea\n              label='Result'\n              name='result'\n              value={result}\n              isHasCopy={result !== ''}\n              onChange={() => {}}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Symmetric;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport {\n  encryptFile,\n  decryptFile,\n  getKeyValue,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  FileSymmetricSchema,\n} from '../../validations/symmetric.schema';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nfunction SymmetricFile() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [status, algorithms] = useAlgoSymmetric();\n  const [errors, setErrors] = useState({});\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    algorithm: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const schemaFiles = FileSymmetricSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL SYMMETRIC ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container' style={{ paddingTop: '0' }}>\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.algorithm !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.algorithm !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <animated.div style={styleDownloadList}>\n                <DownloadList\n                  list={downloadLinks}\n                  onRemove={handleRemove}\n                  onRemoveAll={handleRemoveAll}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SymmetricFile;\n","import { React, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport SymmetricText from './SymmetricText';\nimport SymmetricFile from './SymmetricFile';\n\nfunction Symmetric() {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{paddingTop: '90px'}}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <SymmetricText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <SymmetricFile />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Symmetric;\n","const Button = ({\n  text,\n  color = 'primary',\n  size = '',\n  isLoading = false,\n  ...rest\n}) => {\n  if (size) size = ' ' + size;\n  const classBtn = `btn btn-${color}${size}`;\n  return (\n    <>\n      {isLoading ? (\n        <button className={classBtn} style={{ marginRight: '10px' }} type='button' disabled>\n          <span\n            className='spinner-border spinner-border-sm'\n            role='status'\n            aria-hidden='true'\n          ></span>\n          {' '}Loading...\n        </button>\n      ) : (\n        <button type='button' className={classBtn} {...rest}>\n          {text}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","function generateRandomString(length) {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < characters.length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length)),\n    );\n  }\n  return result.join('').substring(0, length);\n}\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport { generateRandomString, formatBytes };\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Input = ({\n  label,\n  name,\n  type = 'text',\n  error,\n  nameFile,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txt = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}:{' '}\n          {onGetFile && <InputFile nameFile={nameFile} onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txt} />}\n        <input\n          type={type}\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          ref={txt}\n          {...rest}\n        />\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Input;\n","const validateProperty = (schema, { name, value }) => {\n  const schemaProperty = schema.extract(name);\n  const { error } = schemaProperty.validate(value);\n  return error ? error.details[0].message : null;\n};\n\nconst validateForm = (schema, data) => {\n  const options = { abortEarly: false };\n  const { error } = schema.validate(data, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n};\n\nconst scrollToRef = (ref) => {\n  setTimeout(() => {\n    ref &&\n      window.scrollTo({\n        top: ref.current.offsetTop,\n        left: 0,\n        behavior: 'smooth',\n      });\n  }, 500);\n};\n\nexport { validateProperty, validateForm, scrollToRef };\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport config from '../config/default.json';\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.staus < 500;\n  if (!expectedError) {\n    toast.error('An unexpected error occurred.');\n  }\n  return Promise.reject(error);\n});\n\nconst getKeyValue = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(config.api + '/get-key-value', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getKeyValue: getKeyValue,\n  all: axios.all,\n  get: axios.get,\n  post: axios.post,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n","import { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst Select = ({ label, name, status, options, error, ...rest }) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const statusIcon =\n    status && status === 'loading' ? (\n      <span\n        className='spinner-border spinner-border-sm text-success d-inline-block'\n        style={{ marginLeft: '12px' }}\n        role='status'\n      >\n        <span className='visually-hidden'>Loading...</span>\n      </span>\n    ) : status && status === 'error' ? (\n      <span className='d-inline-block ml-5'>\n        <FontAwesomeIcon\n          icon={faExclamationTriangle}\n          style={{ marginLeft: '10px', color: 'red' }}\n        />\n      </span>\n    ) : (\n      ' '\n    );\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={name} className='form-label'>\n          {label}:{statusIcon}\n        </label>\n      )}\n      <select\n        name={name}\n        id={name}\n        className={error ? 'form-select is-invalid' : 'form-select'}\n        {...rest}\n      >\n        <option value=''>Select</option>\n        {options.map((option) => (\n          <option key={option.id} value={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <animated.div style={styles} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\n\nconst InputFile = ({ nameFile = 'key', onGetFile, ...rest }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: '.txt',\n  });\n  useEffect(() => {\n    if (onGetFile) onGetFile(acceptedFiles, nameFile);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [acceptedFiles]);\n\n  return (\n    <span {...getRootProps()} style={{ color: '#0d6efd' }}>\n      <input type='file' {...getInputProps()} {...rest} />\n      (File) <FontAwesomeIcon icon={faUpload} />\n    </span>\n  );\n};\nexport default InputFile;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nconst Clipboard = ({ refElement }) => {\n  const handleCopy = (ref) => {\n    ref.current.select();\n    document.execCommand('copy');\n    toast.success('Copied', {\n      autoClose: 1500,\n      hideProgressBar: true,\n    });\n  };\n\n  return (\n    <div className='bd-clipboard'>\n      <button\n        type='button'\n        className='btn-clipboard'\n        title=''\n        data-bs-original-title='Copy to clipboard'\n        onClick={(e) => handleCopy(refElement)}\n      >\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default Clipboard;\n","import http from './base-http.service';\n\nconst uploadFilesSymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('algorithm', payload.algorithm);\n  formData.append('key', payload.key);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAsymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAdvanced = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  formData.append('algorithm', payload.algorithm);\n  formData.append('symKey', payload.symKey);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  console.log(formData)\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst downloadAllFile = (urls) => {\n  const request = urls.map((url) => downloadFile(url));\n  return http.all(request);\n};\n\nconst downloadFile = (url, onDownloadProgress) => {\n  return http.get(url, {\n    responseType: 'blob',\n    onDownloadProgress,\n  });\n};\nexport { uploadFilesSymmetric, uploadFilesAsymmetric, uploadFilesAdvanced, downloadFile, downloadAllFile };\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Textarea = ({\n  label,\n  name,\n  error,\n  rows = 3,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txa = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}: {onGetFile && <InputFile onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txa} />}\n        <textarea\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          rows={rows}\n          ref={txa}\n          {...rest}\n        ></textarea>\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Textarea;\n","import React from 'react';\nimport Button from './Button';\n\nfunction RadioButton({ name, radios, isEnableGen, onGenerate, ...rest }) {\n  return (\n    <div className='d-flex justify-content-between mb-3'>\n      <span className='text-left'>\n        {radios.map((radio) => (\n          <div key={radio.id} className='form-check form-check-inline'>\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              id={radio.id}\n              value={radio.checked}\n              defaultChecked={radio.checked}\n              {...rest}\n            />\n            <label className='form-check-label' htmlFor={radio.id}>\n              {radio.text}\n            </label>\n          </div>\n        ))}\n      </span>\n\n      {onGenerate && (\n        <span className='text-right'>\n          <Button\n            color='outline-primary btn-sm'\n            onClick={onGenerate}\n            text='Generate Random'\n            disabled={!isEnableGen}\n          />\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default RadioButton;\n","import http from './base-http.service';\nimport { uploadFilesSymmetric } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/symmetric';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint + '/algorithms');\n};\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptText = (payload) => {\n  return http.post(apiEndpoint + '/encrypt/text', payload);\n};\n\nconst decryptText = (payload) => {\n  return http.post(apiEndpoint + '/decrypt/text', payload);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/encrypt/files', payload, onUploadProgress);\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/decrypt/files', payload, onUploadProgress);\n};\n\nexport {\n  getKeyValue,\n  getListAlgorithm,\n  encryptText,\n  decryptText,\n  encryptFile,\n  decryptFile,\n};\n","import React from 'react'\n\nconst ProgressBar = ({ percentage, progress, ...rest }) => {\n  const classProgress = progress === 'Error' ? 'progress-bar progress-bar-striped bg-danger' : (\n    percentage < 100 ? 'progress-bar progress-bar-striped bg-primary' :\n      'progress-bar bg-success'\n  );\n\n  return (\n    <div className='progress' {...rest}>\n      <div\n      className={classProgress}\n      role='progressbar'\n      style={{ width: percentage + '%' }}\n      aria-valuenow={percentage}\n      aria-valuemin='0'\n      aria-valuemax='100'\n    >\n      {percentage}%\n    </div>\n  </div>\n  )\n}\nexport default ProgressBar;","import { React, useState, useCallback, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\nimport { useSpring, useTransition, animated, config } from 'react-spring';\nimport { formatBytes } from '../../utils/string.util';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloudUploadAlt,\n  faFileUpload,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst FileUpload = ({ error, percentage, progress, onGetFiles }) => {\n  const [listFiles, setListFiles] = useState([]);\n  const styleError = useSpring({\n    opacity: error ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleListFiles = useSpring({\n    opacity: listFiles.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleProgressBar = useSpring({\n    opacity: percentage > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const listTransitions = useTransition(listFiles, {\n    config: config.gentle,\n    from: { opacity: 0, height: 0, transform: 'translate3d(-25%, 0px, 0px)' },\n    enter: { opacity: 1, height: 45, transform: 'translate3d(0%, 0px, 0px)' },\n    leave: { opacity: 0, height: 0, transform: 'translate3d(25%, 0px, 0px)' },\n    keys: listFiles.map((file) => file.path),\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onDrop = useCallback((acceptedFiles) => {\n    setListFiles([...acceptedFiles]);\n  });\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  useEffect(() => {\n    onGetFiles(listFiles);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listFiles]);\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...listFiles];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setListFiles(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setListFiles([]);\n  };\n\n  const files = (\n    <ul className='list-group'>\n      {listTransitions((styles, file) => (\n        <animated.li style={styles} className='list-group-item d-inline-flex'>\n          <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n            <FontAwesomeIcon\n              icon={faFileUpload}\n              style={{ marginRight: '10px' }}\n            />\n            {file.path} - {formatBytes(file.size)}\n          </span>\n          <span className='item-close ml-3'>\n            {' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={handleRemove(file)}\n              style={{ marginLeft: '10px' }}\n            />\n          </span>\n        </animated.li>\n      ))}\n    </ul>\n  );\n\n  const formatNameFiles = (list) => (list.length > 1 ? 'Files' : 'File');\n\n  return (\n    <>\n      <div {...getRootProps({ className: 'dropzone mb-3' })}>\n        <div className='dz-message d-flex flex-column'>\n          <input {...getInputProps()} />\n          <span style={{ textAlign: 'center' }}>\n            <FontAwesomeIcon icon={faCloudUploadAlt} size='5x' />\n          </span>\n          Drag &amp; Drop here or click\n        </div>\n      </div>\n      {(error && listFiles.length === 0) && (\n        <animated.div style={styleError} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n      {listFiles.length > 0 && (\n        <animated.div style={styleListFiles} className='list-files'>\n          <div className='d-flex'>\n            <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n              {formatNameFiles(listFiles)}\n              <small>\n                ({listFiles.length} file{listFiles.length > 1 && 's'})\n              </small>\n              {percentage > 0 && (\n                <p style={{ fontSize: '16px' }}>\n                  Progress:{' '}\n                  <span\n                    className={\n                      progress === 'Error'\n                        ? 'ml-3 text-danger'\n                        : 'ml-3 mr-3 text-success'\n                    }\n                  >\n                    {progress}{' '}\n                    {percentage < 100 && (\n                      <span\n                        className='spinner-border spinner-border-sm text-success'\n                        role='status'\n                      >\n                        <span className='visually-hidden'>Loading...</span>\n                      </span>\n                    )}\n                  </span>\n                </p>\n              )}\n            </h5>\n            <div>\n              <Button\n                text='Clear All'\n                color='outline-success btn-sm btn-block'\n                size='btn-sm'\n                onClick={handleRemoveAll}\n              />\n            </div>\n          </div>\n          <animated.div style={styleProgressBar} className='mb-3'>\n            {percentage > 0 && (\n              <ProgressBar percentage={percentage} progress={progress} />\n            )}\n          </animated.div>\n          <aside className='mb-3'>{files}</aside>\n        </animated.div>\n      )}\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { downloadFile } from '../../services/file.service';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\n\nconst ItemDownload = ({ name, url }) => {\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Download');\n\n  const handleDownload = () => {\n    setPercentage(0);\n    downloadFile(url, (event) => {\n      setPercentage(Math.round((100 * event.loaded) / event.total));\n    })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', name);\n        document.body.appendChild(link);\n        link.click();\n        setProgress('Done');\n      })\n      .catch((err) => {\n        setProgress('Error');\n        toast.error(err);\n      });\n  };\n\n  const classBtn =\n    progress === 'Error'\n      ? 'danger btn-sm'\n      : progress === 'Done'\n      ? 'success btn-sm'\n      : 'outline-success btn-sm';\n  return (\n    <div className='d-flex justify-content-between align-items-center'>\n      <div className='flex-grow-1'>\n        <ProgressBar\n          percentage={percentage}\n          progress={progress}\n          style={{ width: 96 + '%' }}\n        />\n      </div>\n      <div>\n        <Button text={progress} color={classBtn} onClick={handleDownload} disabled={progress === 'Done'} />\n      </div>\n    </div>\n  );\n};\nexport default ItemDownload;\n","import React from 'react';\nimport Button from './Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { formatBytes } from '../../utils/string.util';\nimport ItemDownload from '../common/ItemDownload';\n\nconst DownloadList = ({ list, onRemove, onRemoveAll }) => {\n  return (\n    <>\n      <div className='d-flex mb-3'>\n        <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n          Result Files:\n        </h5>\n        <Button\n          text='Clear All'\n          color='outline-success'\n          size='btn-sm'\n          onClick={onRemoveAll}\n        />\n      </div>\n      <ul className='list-group'>\n        {list.map((file) => (\n          <li key={file.linkDownload} className='list-group-item'>\n            <div className='d-flex justify-content-between w-100 mb-2'>\n              <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n                <FontAwesomeIcon\n                  icon={faFileDownload}\n                  style={{ marginRight: '10px' }}\n                />\n                {file.fileName} - {formatBytes(file.size)}\n              </span>\n              <span className='item-close ml-3'>\n                {' '}\n                <FontAwesomeIcon\n                  icon={faTimes}\n                  onClick={onRemove(file)}\n                  style={{ marginLeft: '10px' }}\n                />\n              </span>\n            </div>\n            <ItemDownload name={file.fileName} url={file.linkDownload} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default DownloadList;\n"],"sourceRoot":""}