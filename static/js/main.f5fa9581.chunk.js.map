{"version":3,"sources":["components/Navbar.jsx","components/common/Select.jsx","components/common/InputFile.jsx","components/common/Clipboard.jsx","components/common/Textarea.jsx","components/common/Input.jsx","components/common/Button.jsx","components/common/RadioButton.jsx","components/common/Form.jsx","utils/string.util.js","services/base-http.service.js","services/file.service.js","services/symmertric.service.js","components/hooks/AlgoSymmetric.jsx","components/symmetric/SymmetricText.jsx","components/common/ProgressBar.jsx","components/common/FileUpload.jsx","components/common/ItemDownload.jsx","components/common/DownloadList.jsx","components/symmetric/SymmetricFile.jsx","components/symmetric/Symmetric.jsx","components/common/Alert.jsx","services/asymmetric.service.js","validations/asymmetric.schema.js","components/asymmetric/AsymmetricFile.jsx","components/asymmetric/AsymmetricText.jsx","components/asymmetric/KeyGenerator.jsx","components/asymmetric/Asymmetric.jsx","components/aes/AESText.jsx","components/aes/AESFile.jsx","components/aes/AES.jsx","components/blowfish/BlowFishText.jsx","components/blowfish/BlowFishFile.jsx","components/blowfish/BlowFish.jsx","services/hash.service.js","validations/hash.schema.js","components/hooks/AlgoHash.jsx","components/hash/GenerateHash.jsx","components/hash/VerifyHash.jsx","components/hash/Hash.jsx","services/advance.service.js","components/advanced/AdvancedFile.jsx","components/Router.jsx","App.js","reportWebVitals.js","index.js","validations/symmetric.schema.js","validations/aes.schema.js","validations/blowfish.schema.js"],"names":["Navbar","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","Select","label","name","status","options","error","rest","styles","useSpring","opacity","statusIcon","style","marginLeft","role","icon","faExclamationTriangle","color","htmlFor","value","map","option","div","InputFile","nameFile","onGetFile","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","useEffect","faUpload","Clipboard","refElement","title","data-bs-original-title","onClick","e","current","select","document","execCommand","toast","success","autoClose","hideProgressBar","Textarea","rows","isHasCopy","txa","useRef","ref","Input","txt","Button","text","size","isLoading","classBtn","marginRight","disabled","aria-hidden","RadioButton","radios","isEnableGen","onGenerate","radio","checked","defaultChecked","validateProperty","schema","extract","validate","details","message","validateForm","data","abortEarly","errors","item","path","scrollToRef","setTimeout","window","scrollTo","top","offsetTop","left","behavior","generateRandomString","length","result","characters","i","push","charAt","Math","floor","random","join","substring","formatBytes","bytes","decimals","k","dm","sizes","log","parseFloat","pow","toFixed","axios","interceptors","response","use","staus","Promise","reject","getKeyValue","file","formData","FormData","append","post","config","api","headers","all","get","patch","delete","uploadFilesSymmetric","url","payload","onUploadProgress","files","forEach","index","algorithm","key","iv","isHexKey","isHexIv","http","uploadFilesAsymmetric","passphrase","isPublicKey","uploadFilesAdvanced","symKey","console","downloadFile","onDownloadProgress","responseType","apiEndpoint","getListAlgorithm","encryptText","decryptText","encryptFile","decryptFile","useAlgoSymmetric","useState","algorithms","setAlgorithms","setStatus","a","listAlgorithms","Symmetric","listMode","showIV","setShowIV","setResult","setErrors","keyLength","ivLength","sizeValues","setSizeValues","values","setValues","encrypt","decrypt","statusLoading","setStatusLoading","styleIV","stiff","algo","find","cipher","hasOwnProperty","Number","schemaText","TextSymmetricSchema","calculatorLength","handleChange","input","currentTarget","errorsData","handleEncrypt","handleDecrypt","handleChecked","handleGeneator","property","mode","toUpperCase","slice","randomBytes","toString","handleGetKeyValue","onChange","ProgressBar","percentage","progress","classProgress","width","aria-valuenow","aria-valuemin","aria-valuemax","FileUpload","onGetFiles","listFiles","setListFiles","styleError","styleListFiles","styleProgressBar","listTransitions","useTransition","gentle","from","height","transform","enter","leave","keys","onDrop","useCallback","list","handleRemove","newFiles","splice","indexOf","li","wordBreak","faFileUpload","faTimes","textAlign","faCloudUploadAlt","display","fontSize","ItemDownload","setPercentage","setProgress","event","round","loaded","total","then","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","catch","err","DownloadList","onRemove","onRemoveAll","faFileDownload","fileName","linkDownload","SymmetricFile","downloadListRef","downloadLinks","setDownloadLinks","styleDownloadList","schemaFiles","FileSymmetricSchema","listDownloadFile","filter","some","listDownload","paddingTop","tab","setTab","styleText","styleFile","handleChangeTab","SymmetricText","Alert","isHasClose","faInfoCircle","faCheckCircle","KeyPairSchema","Joi","bitSize","required","min","max","messages","pass","BaseSchema","TextAsymmetricSchema","FileAsymmetricSchema","FileAsymmetricAdvancedSchema","AsymmetricFile","AsymmetricText","readOnly","KeyGenerator","keyValues","setKeyValues","publicKey","privateKey","keyGenerare","setKeyGenerare","handleGenerator","Asymmetric","props","AESText","setAlgotithms","keySize","fetchData","AESTextSchema","AESFile","AESFilesSchema","AES","BlowFishText","BlowFishTextSchema","BlowFishFile","BlowFishFilesSchema","BlowFish","generateChecksum","verifyChecksum","hash","ParamsHashSchema","ParamsVerifySchema","useAlgoHash","GenerateHash","undefined","handleGenerate","VerifyHash","show","this","styleAlert","molasses","handleGetValue","handleVerify","Hash","AdvancedFile","dataLink","Router","component","App","position","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","isBuffer","typeMessage","algoInfo","isHasIV","Buffer","alloc","object","string","boolean","optional","any","default","array"],"mappings":"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","file":"static/js/main.f5fa9581.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav className='navbar fixed-top navbar-expand-lg navbar-light'>\n      <div className='container-fluid justify-content-center'>\n        <Link className='navbar-brand' to='/'>\n          APP ENCRYPTION\n        </Link>\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-bs-toggle='collapse'\n          data-bs-target='#navbarSupportedContent'\n          aria-controls='navbarSupportedContent'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n        >\n          <span className='navbar-toggler-icon'></span>\n        </button>\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n          <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/'\n                activeClassName='active'\n                exact={true}\n              >\n                Symmetric\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink className='nav-link' to='/aes' activeClassName='active'>\n                AES\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/blowfish'\n                activeClassName='active'\n              >\n                Blowfish\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/asymmetric'\n                activeClassName='active'\n              >\n                RSA\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/hash'\n                activeClassName='active'\n              >\n                Hash\n              </NavLink>\n            </li>\n            <li className='nav-item'>\n              <NavLink\n                className='nav-link'\n                to='/advanced-file'\n                activeClassName='active'\n              >\n                Advanced Tool\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst Select = ({ label, name, status, options, error, ...rest }) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const statusIcon =\n    status && status === 'loading' ? (\n      <span\n        className='spinner-border spinner-border-sm text-success d-inline-block'\n        style={{ marginLeft: '12px' }}\n        role='status'\n      >\n        <span className='visually-hidden'>Loading...</span>\n      </span>\n    ) : status && status === 'error' ? (\n      <span className='d-inline-block ml-5'>\n        <FontAwesomeIcon\n          icon={faExclamationTriangle}\n          style={{ marginLeft: '10px', color: 'red' }}\n        />\n      </span>\n    ) : (\n      ' '\n    );\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={name} className='form-label'>\n          {label}:{statusIcon}\n        </label>\n      )}\n      <select\n        name={name}\n        id={name}\n        className={error ? 'form-select is-invalid' : 'form-select'}\n        {...rest}\n      >\n        <option value=''>Select</option>\n        {options.map((option) => (\n          <option key={option.id} value={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <animated.div style={styles} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\n\nconst InputFile = ({ nameFile = 'key', onGetFile, ...rest }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: '.txt',\n  });\n  useEffect(() => {\n    if (onGetFile) onGetFile(acceptedFiles, nameFile);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [acceptedFiles]);\n\n  return (\n    <span {...getRootProps()} style={{ color: '#0d6efd' }}>\n      <input type='file' {...getInputProps()} {...rest} />\n      (File) <FontAwesomeIcon icon={faUpload} />\n    </span>\n  );\n};\nexport default InputFile;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nconst Clipboard = ({ refElement }) => {\n  const handleCopy = (ref) => {\n    ref.current.select();\n    document.execCommand('copy');\n    toast.success('Copied', {\n      autoClose: 1500,\n      hideProgressBar: true,\n    });\n  };\n\n  return (\n    <div className='bd-clipboard'>\n      <button\n        type='button'\n        className='btn-clipboard'\n        title=''\n        data-bs-original-title='Copy to clipboard'\n        onClick={(e) => handleCopy(refElement)}\n      >\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default Clipboard;\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Textarea = ({\n  label,\n  name,\n  error,\n  rows = 3,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txa = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}: {onGetFile && <InputFile onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txa} />}\n        <textarea\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          rows={rows}\n          ref={txa}\n          {...rest}\n        ></textarea>\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Textarea;\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Input = ({\n  label,\n  name,\n  type = 'text',\n  error,\n  nameFile,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txt = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}:{' '}\n          {onGetFile && <InputFile nameFile={nameFile} onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txt} />}\n        <input\n          type={type}\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          ref={txt}\n          {...rest}\n        />\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Input;\n","const Button = ({\n  text,\n  color = 'primary',\n  size = '',\n  isLoading = false,\n  ...rest\n}) => {\n  if (size) size = ' ' + size;\n  const classBtn = `btn btn-${color}${size}`;\n  return (\n    <>\n      {isLoading ? (\n        <button className={classBtn} style={{ marginRight: '10px' }} type='button' disabled>\n          <span\n            className='spinner-border spinner-border-sm'\n            role='status'\n            aria-hidden='true'\n          ></span>\n          {' '}Loading...\n        </button>\n      ) : (\n        <button type='button' className={classBtn} {...rest}>\n          {text}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nfunction RadioButton({ name, radios, isEnableGen, onGenerate, ...rest }) {\n  return (\n    <div className='d-flex justify-content-between mb-3'>\n      <span className='text-left'>\n        {radios.map((radio) => (\n          <div key={radio.id} className='form-check form-check-inline'>\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              id={radio.id}\n              value={radio.checked}\n              defaultChecked={radio.checked}\n              {...rest}\n            />\n            <label className='form-check-label' htmlFor={radio.id}>\n              {radio.text}\n            </label>\n          </div>\n        ))}\n      </span>\n\n      {onGenerate && (\n        <span className='text-right'>\n          <Button\n            color='outline-primary btn-sm'\n            onClick={onGenerate}\n            text='Generate Random'\n            disabled={!isEnableGen}\n          />\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default RadioButton;\n","const validateProperty = (schema, { name, value }) => {\n  const schemaProperty = schema.extract(name);\n  const { error } = schemaProperty.validate(value);\n  return error ? error.details[0].message : null;\n};\n\nconst validateForm = (schema, data) => {\n  const options = { abortEarly: false };\n  const { error } = schema.validate(data, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n};\n\nconst scrollToRef = (ref) => {\n  setTimeout(() => {\n    ref &&\n      window.scrollTo({\n        top: ref.current.offsetTop,\n        left: 0,\n        behavior: 'smooth',\n      });\n  }, 500);\n};\n\nexport { validateProperty, validateForm, scrollToRef };\n","function generateRandomString(length) {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < characters.length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length)),\n    );\n  }\n  return result.join('').substring(0, length);\n}\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport { generateRandomString, formatBytes };\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport config from '../config/default.json';\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.staus < 500;\n  if (!expectedError) {\n    toast.error('An unexpected error occurred.');\n  }\n  return Promise.reject(error);\n});\n\nconst getKeyValue = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(config.api + '/get-key-value', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getKeyValue: getKeyValue,\n  all: axios.all,\n  get: axios.get,\n  post: axios.post,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n","import http from './base-http.service';\n\nconst uploadFilesSymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('algorithm', payload.algorithm);\n  formData.append('key', payload.key);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAsymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAdvanced = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  formData.append('algorithm', payload.algorithm);\n  formData.append('symKey', payload.symKey);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  console.log(formData)\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst downloadAllFile = (urls) => {\n  const request = urls.map((url) => downloadFile(url));\n  return http.all(request);\n};\n\nconst downloadFile = (url, onDownloadProgress) => {\n  return http.get(url, {\n    responseType: 'blob',\n    onDownloadProgress,\n  });\n};\nexport { uploadFilesSymmetric, uploadFilesAsymmetric, uploadFilesAdvanced, downloadFile, downloadAllFile };\n","import http from './base-http.service';\nimport { uploadFilesSymmetric } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/symmetric';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint + '/algorithms');\n};\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptText = (payload) => {\n  return http.post(apiEndpoint + '/encrypt/text', payload);\n};\n\nconst decryptText = (payload) => {\n  return http.post(apiEndpoint + '/decrypt/text', payload);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/encrypt/files', payload, onUploadProgress);\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/decrypt/files', payload, onUploadProgress);\n};\n\nexport {\n  getKeyValue,\n  getListAlgorithm,\n  encryptText,\n  decryptText,\n  encryptFile,\n  decryptFile,\n};\n","import { useState, useEffect } from 'react';\nimport { getListAlgorithm } from '../../services/symmertric.service';\nimport { toast } from 'react-toastify';\n\nconst useAlgoSymmetric = () => {\n  const [algorithms, setAlgorithms] = useState([]);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setStatus('loading');\n        const listAlgorithms = await getListAlgorithm();\n        setAlgorithms(listAlgorithms.data);\n        setStatus('done');\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n        setStatus('error');\n      }\n    })();\n  }, []);\n  return [status, algorithms];\n};\n\nexport { useAlgoSymmetric };\n","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport {\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  TextSymmetricSchema,\n} from '../../validations/symmetric.schema';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nexport function Symmetric() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n\n  const [status, algorithms] = useAlgoSymmetric();\n  const [showIV, setShowIV] = useState(false);\n  const [result, setResult] = useState('');\n  const [errors, setErrors] = useState({});\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    text: '',\n    key: '',\n    algorithm: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const schemaText = TextSymmetricSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const response = await encryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const response = await decryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL SYMMETRIC ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='text'\n              error={errors['text']}\n              isHasCopy={values.text !== ''}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.algorithm !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.algorithm !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <Textarea\n              label='Result'\n              name='result'\n              value={result}\n              isHasCopy={result !== ''}\n              onChange={() => {}}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Symmetric;\n","import React from 'react'\n\nconst ProgressBar = ({ percentage, progress, ...rest }) => {\n  const classProgress = progress === 'Error' ? 'progress-bar progress-bar-striped bg-danger' : (\n    percentage < 100 ? 'progress-bar progress-bar-striped bg-primary' :\n      'progress-bar bg-success'\n  );\n\n  return (\n    <div className='progress' {...rest}>\n      <div\n      className={classProgress}\n      role='progressbar'\n      style={{ width: percentage + '%' }}\n      aria-valuenow={percentage}\n      aria-valuemin='0'\n      aria-valuemax='100'\n    >\n      {percentage}%\n    </div>\n  </div>\n  )\n}\nexport default ProgressBar;","import { React, useState, useCallback, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\nimport { useSpring, useTransition, animated, config } from 'react-spring';\nimport { formatBytes } from '../../utils/string.util';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloudUploadAlt,\n  faFileUpload,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst FileUpload = ({ error, percentage, progress, onGetFiles }) => {\n  const [listFiles, setListFiles] = useState([]);\n  const styleError = useSpring({\n    opacity: error ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleListFiles = useSpring({\n    opacity: listFiles.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleProgressBar = useSpring({\n    opacity: percentage > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const listTransitions = useTransition(listFiles, {\n    config: config.gentle,\n    from: { opacity: 0, height: 0, transform: 'translate3d(-25%, 0px, 0px)' },\n    enter: { opacity: 1, height: 45, transform: 'translate3d(0%, 0px, 0px)' },\n    leave: { opacity: 0, height: 0, transform: 'translate3d(25%, 0px, 0px)' },\n    keys: listFiles.map((file) => file.path),\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onDrop = useCallback((acceptedFiles) => {\n    setListFiles([...acceptedFiles]);\n  });\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  useEffect(() => {\n    onGetFiles(listFiles);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listFiles]);\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...listFiles];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setListFiles(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setListFiles([]);\n  };\n\n  const files = (\n    <ul className='list-group'>\n      {listTransitions((styles, file) => (\n        <animated.li style={styles} className='list-group-item d-inline-flex'>\n          <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n            <FontAwesomeIcon\n              icon={faFileUpload}\n              style={{ marginRight: '10px' }}\n            />\n            {file.path} - {formatBytes(file.size)}\n          </span>\n          <span className='item-close ml-3'>\n            {' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={handleRemove(file)}\n              style={{ marginLeft: '10px' }}\n            />\n          </span>\n        </animated.li>\n      ))}\n    </ul>\n  );\n\n  const formatNameFiles = (list) => (list.length > 1 ? 'Files' : 'File');\n\n  return (\n    <>\n      <div {...getRootProps({ className: 'dropzone mb-3' })}>\n        <div className='dz-message d-flex flex-column'>\n          <input {...getInputProps()} />\n          <span style={{ textAlign: 'center' }}>\n            <FontAwesomeIcon icon={faCloudUploadAlt} size='5x' />\n          </span>\n          Drag &amp; Drop here or click\n        </div>\n      </div>\n      {(error && listFiles.length === 0) && (\n        <animated.div style={styleError} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n      {listFiles.length > 0 && (\n        <animated.div style={styleListFiles} className='list-files'>\n          <div className='d-flex'>\n            <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n              {formatNameFiles(listFiles)}\n              <small>\n                ({listFiles.length} file{listFiles.length > 1 && 's'})\n              </small>\n              {percentage > 0 && (\n                <p style={{ fontSize: '16px' }}>\n                  Progress:{' '}\n                  <span\n                    className={\n                      progress === 'Error'\n                        ? 'ml-3 text-danger'\n                        : 'ml-3 mr-3 text-success'\n                    }\n                  >\n                    {progress}{' '}\n                    {percentage < 100 && (\n                      <span\n                        className='spinner-border spinner-border-sm text-success'\n                        role='status'\n                      >\n                        <span className='visually-hidden'>Loading...</span>\n                      </span>\n                    )}\n                  </span>\n                </p>\n              )}\n            </h5>\n            <div>\n              <Button\n                text='Clear All'\n                color='outline-success btn-sm btn-block'\n                size='btn-sm'\n                onClick={handleRemoveAll}\n              />\n            </div>\n          </div>\n          <animated.div style={styleProgressBar} className='mb-3'>\n            {percentage > 0 && (\n              <ProgressBar percentage={percentage} progress={progress} />\n            )}\n          </animated.div>\n          <aside className='mb-3'>{files}</aside>\n        </animated.div>\n      )}\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { downloadFile } from '../../services/file.service';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\n\nconst ItemDownload = ({ name, url }) => {\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Download');\n\n  const handleDownload = () => {\n    setPercentage(0);\n    downloadFile(url, (event) => {\n      setPercentage(Math.round((100 * event.loaded) / event.total));\n    })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', name);\n        document.body.appendChild(link);\n        link.click();\n        setProgress('Done');\n      })\n      .catch((err) => {\n        setProgress('Error');\n        toast.error(err);\n      });\n  };\n\n  const classBtn =\n    progress === 'Error'\n      ? 'danger btn-sm'\n      : progress === 'Done'\n      ? 'success btn-sm'\n      : 'outline-success btn-sm';\n  return (\n    <div className='d-flex justify-content-between align-items-center'>\n      <div className='flex-grow-1'>\n        <ProgressBar\n          percentage={percentage}\n          progress={progress}\n          style={{ width: 96 + '%' }}\n        />\n      </div>\n      <div>\n        <Button text={progress} color={classBtn} onClick={handleDownload} disabled={progress === 'Done'} />\n      </div>\n    </div>\n  );\n};\nexport default ItemDownload;\n","import React from 'react';\nimport Button from './Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { formatBytes } from '../../utils/string.util';\nimport ItemDownload from '../common/ItemDownload';\n\nconst DownloadList = ({ list, onRemove, onRemoveAll }) => {\n  return (\n    <>\n      <div className='d-flex mb-3'>\n        <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n          Result Files:\n        </h5>\n        <Button\n          text='Clear All'\n          color='outline-success'\n          size='btn-sm'\n          onClick={onRemoveAll}\n        />\n      </div>\n      <ul className='list-group'>\n        {list.map((file) => (\n          <li key={file.linkDownload} className='list-group-item'>\n            <div className='d-flex justify-content-between w-100 mb-2'>\n              <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n                <FontAwesomeIcon\n                  icon={faFileDownload}\n                  style={{ marginRight: '10px' }}\n                />\n                {file.fileName} - {formatBytes(file.size)}\n              </span>\n              <span className='item-close ml-3'>\n                {' '}\n                <FontAwesomeIcon\n                  icon={faTimes}\n                  onClick={onRemove(file)}\n                  style={{ marginLeft: '10px' }}\n                />\n              </span>\n            </div>\n            <ItemDownload name={file.fileName} url={file.linkDownload} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default DownloadList;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport {\n  encryptFile,\n  decryptFile,\n  getKeyValue,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  FileSymmetricSchema,\n} from '../../validations/symmetric.schema';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nfunction SymmetricFile() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [status, algorithms] = useAlgoSymmetric();\n  const [errors, setErrors] = useState({});\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    algorithm: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const schemaFiles = FileSymmetricSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL SYMMETRIC ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container' style={{ paddingTop: '0' }}>\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.algorithm !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.algorithm !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <animated.div style={styleDownloadList}>\n                <DownloadList\n                  list={downloadLinks}\n                  onRemove={handleRemove}\n                  onRemoveAll={handleRemoveAll}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SymmetricFile;\n","import { React, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport SymmetricText from './SymmetricText';\nimport SymmetricFile from './SymmetricFile';\n\nfunction Symmetric() {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{paddingTop: '90px'}}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <SymmetricText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <SymmetricFile />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Symmetric;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Alert = ({ message, type = 'primary', isHasClose = true, ...rest }) => {\n  const icon =\n    type === 'primary'\n      ? faInfoCircle\n      : type === 'danger'\n      ? faExclamationTriangle\n      : faCheckCircle;\n\n  return (\n    <div\n      className={`alert alert-${type} alert-dismissible fade show`}\n      role='alert'\n    >\n      <FontAwesomeIcon icon={icon} style={{ marginRight: '10px' }} />\n      {message}\n      {isHasClose && (\n        <button type='button' className='btn-close' {...rest}></button>\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n","import http from './base-http.service';\nimport { uploadFilesAsymmetric } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/asymmetric';\n\nconst generateKeyPair = (payload) => {\n  return http.post(apiEndpoint + '/genenrate-key-pair', payload);\n};\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptText = (payload) => {\n  return http.post(apiEndpoint + '/encrypt/text', payload);\n};\n\nconst decryptText = (payload) => {\n  return http.post(apiEndpoint + '/decrypt/text', payload);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAsymmetric(\n    apiEndpoint + '/encrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAsymmetric(\n    apiEndpoint + '/decrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nexport {\n  getKeyValue,\n  generateKeyPair,\n  encryptText,\n  decryptText,\n  encryptFile,\n  decryptFile,\n};\n","import * as Joi from 'joi';\n\nconst KeyPairSchema = Joi.object({\n  bitSize: Joi.number().required().min(1024).max(7168).messages({\n    'any.required': `\"keysize\" is not allowed to be empty`,\n    'number.min': `\"keysize\"  must be greater than or equal to {#limit}`,\n    'number.max': `\"keysize\"  must be less than or equal to {#limit}`,\n  }),\n  pass: Joi.string().required(),\n});\n\nconst BaseSchema = Joi.object({\n  key: Joi.string().required(),\n  isPublicKey: Joi.boolean().required(),\n  passphrase: Joi.string().required(),\n});\n\nconst TextAsymmetricSchema = BaseSchema.keys({\n  data: Joi.string().required(),\n});\n\nconst FileAsymmetricSchema = BaseSchema.keys({\n  files: Joi.required(),\n});\n\nconst FileAsymmetricAdvancedSchema = BaseSchema.keys({\n  files: Joi.required(),\n  symKey: Joi.string().required().messages({\n    'string.base': `\"key\" should be a type of 'text'`,\n    'string.hex': `\"key\" is not a valid hexadecimal string`,\n    'any.required': `\"key\" is not allowed to be empty`,\n  }),\n  isHexKey: Joi.boolean().required(),\n  isHexIv: Joi.boolean(),\n  iv: Joi.optional(),\n  algorithm: Joi.string().required().messages({\n    'string.base': `\"algorithm\" should be a type of 'text'`,\n    'any.required': `\"algorithm' is not allowed to be empty`,\n  }),\n});\nexport {\n  KeyPairSchema,\n  TextAsymmetricSchema,\n  FileAsymmetricSchema,\n  FileAsymmetricAdvancedSchema,\n};\n","import React, { useState, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Textarea from '../common/Textarea';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport Alert from '../common/Alert';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n} from '../../services/asymmetric.service';\nimport { FileAsymmetricSchema } from '../../validations/asymmetric.schema';\nimport Input from '../common/Input';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\n\nconst AsymmetricFile = () => {\n  const listRad = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const downloadListRef = useRef(null);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n  });\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(FileAsymmetricSchema, values);\n    setErrors(errors || {});\n    console.log(errors);\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(FileAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL RSA ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <Alert\n            type='primary'\n            message='Data must not be longer than keysize'\n            isHasClose={false}\n          />\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Textarea\n              label='Public key/Private key'\n              name='key'\n              error={errors['key']}\n              value={values.key}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isPublicKey'\n              radios={listRad}\n              onChange={handleChecked}\n            />\n            <Input\n              label='Passphrase'\n              name='passphrase'\n              value={values.passphrase}\n              error={errors['passphrase']}\n              isHasCopy={values.passphrase !== ''}\n              onChange={handleChange}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                isLoading={statusLoading.encrypt}\n                style={{ marginRight: '10px' }}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                isLoading={statusLoading.decrypt}\n                size='btn-lg'\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <animated.div style={styleDownloadList}>\n                <DownloadList\n                  list={downloadLinks}\n                  onRemove={handleRemove}\n                  onRemoveAll={handleRemoveAll}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AsymmetricFile;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Textarea from '../common/Textarea';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { validateProperty, validateForm } from '../common/Form';\nimport {\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/asymmetric.service';\nimport { TextAsymmetricSchema } from '../../validations/asymmetric.schema';\nimport Input from '../common/Input';\n\nconst AsymmetricText = () => {\n  const listRad = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const [errors, setErrors] = useState({});\n  const [result, setResult] = useState('');\n  const [values, setValues] = useState({\n    data: '',\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(TextAsymmetricSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(TextAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const response = await encryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      const { message } = error.response.data;\n      toast.error(message);\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(TextAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const response = await decryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      const { message } = error.response.data;\n      toast.error(message);\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL RSA ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='data'\n              error={errors['data']}\n              value={values.data}\n              isHasCopy={values.data !== ''}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Public key/Private key'\n              name='key'\n              error={errors['key']}\n              value={values.key}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isPublicKey'\n              radios={listRad}\n              onChange={handleChecked}\n            />\n            <Input\n              label='Passphrase'\n              name='passphrase'\n              value={values.passphrase}\n              error={errors['passphrase']}\n              isHasCopy={values.passphrase !== ''}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Result'\n              name='result'\n              readOnly\n              isHasCopy={result !== ''}\n              value={result}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AsymmetricText;\n","import React, { useState } from 'react';\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport { toast } from 'react-toastify';\nimport { generateKeyPair } from '../../services/asymmetric.service';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { KeyPairSchema } from '../../validations/asymmetric.schema';\nconst KeyGenerator = () => {\n  const listOptions = [\n    {\n      id: 1024,\n      name: 1024,\n    },\n    {\n      id: 2048,\n      name: 2048,\n    },\n    {\n      id: 3072,\n      name: 3072,\n    },\n    {\n      id: 4096,\n      name: 4096,\n    },\n    {\n      id: 5120,\n      name: 5120,\n    },\n    {\n      id: 6144,\n      name: 6144,\n    },\n    {\n      id: 7168,\n      name: 7168,\n    },\n  ];\n  const [keyValues, setKeyValues] = useState({\n    bitSize: 0,\n    pass: 'secret',\n  });\n\n  const [keyGenerare, setKeyGenerare] = useState({\n    publicKey: '',\n    privateKey: '',\n  });\n  const [statusLoading, setStatusLoading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  const handleGenerator = async () => {\n    const errors = validateForm(KeyPairSchema, keyValues);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading(true);\n      const values = { ...keyValues };\n      values.passphrase = values.pass;\n      delete values.pass;\n      const response = await generateKeyPair(values);\n      const { publicKey, privateKey } = response.data;\n      const data = { ...keyGenerare };\n      data.publicKey = publicKey;\n      data.privateKey = privateKey;\n      setKeyGenerare(data);\n    } catch (error) {\n      const { message } = error.response.data;\n      toast.error(message);\n    } finally {\n      setStatusLoading(false);\n    }\n  };\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(KeyPairSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n\n    const data = { ...keyValues };\n    data[input.name] =\n      input.name === 'bitSize' ? Number(input.value) : input.value;\n    setKeyValues(data);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>KEY GENERATOR</div>\n      <div className='card-body'>\n        <div className='container'>\n          <Select\n            label='Key Size'\n            name='bitSize'\n            options={listOptions}\n            error={errors['bitSize']}\n            onChange={handleChange}\n          />\n          <Input\n            label='Passpharse (default: secret)'\n            name='pass'\n            error={errors['pass']}\n            value={keyValues.pass}\n            onChange={handleChange}\n          />\n          <div className='mb-3'>\n            <Button\n              color='outline-primary'\n              text='Generate'\n              isLoading={statusLoading}\n              onClick={handleGenerator}\n            />\n          </div>\n          <Textarea\n            label='Public Key'\n            name='publicKey'\n            rows='4'\n            readOnly\n            isHasCopy={keyGenerare.publicKey !== ''}\n            value={keyGenerare.publicKey}\n          />\n          <Textarea\n            label='Private Key'\n            name='privateKey'\n            rows='4'\n            readOnly\n            isHasCopy={keyGenerare.privateKey !== ''}\n            value={keyGenerare.privateKey}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default KeyGenerator;\n","import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport AsymmetricFile from './AsymmetricFile';\nimport AsymmetricText from './AsymmetricText';\nimport KeyGenerator from './KeyGenerator';\n\nconst Asymmetric = (props) => {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n          <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <AsymmetricText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <AsymmetricFile />\n              </animated.div>\n            )}\n          </div>\n          <div className='col-md-4'>\n            <KeyGenerator />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Asymmetric;\n","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport {\n  getListAlgorithm,\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/symmertric.service';\nimport { calculatorLength, AESTextSchema } from '../../validations/aes.schema';\n\nexport function AESText() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listKeySize = [\n    { id: '128', name: '128' },\n    { id: '192', name: '192' },\n    { id: '256', name: '256' },\n  ];\n\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'ctr', name: 'CTR' },\n    { id: 'cfb8', name: 'CFB8' },\n    { id: 'cfb1', name: 'CFB1' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [result, setResult] = useState('');\n  const [errors, setErrors] = useState({});\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    text: '',\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    keySize: '',\n    mode: '',\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0 });\n\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find(\n      (cipher) => cipher.id === `aes-${values.keySize}-${values.mode}`,\n    );\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.keySize, values.mode]);\n\n  const schemaText = AESTextSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `aes-${values.keySize}-${values.mode}`;\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await encryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `aes-${values.keySize}-${values.mode}`;\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await decryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL AES ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='text'\n              error={errors['text']}\n              isHasCopy={values.text !== ''}\n              onChange={handleChange}\n            />\n            <Select\n              label='Key Size'\n              name='keySize'\n              options={listKeySize}\n              //defaultValue={values.keySize}\n              error={errors['keySize']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n              // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== '' && values.keySize !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== '' && values.keySize !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <Textarea\n              label='Result'\n              name='result'\n              value={result}\n              isHasCopy={result !== ''}\n              onChange={() => {}}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AESText;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport {\n  getListAlgorithm,\n  encryptFile,\n  decryptFile,\n  getKeyValue,\n} from '../../services/symmertric.service';\nimport { calculatorLength, AESFilesSchema } from '../../validations/aes.schema';\nfunction AESFile() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listKeySize = [\n    { id: '128', name: '128' },\n    { id: '192', name: '192' },\n    { id: '256', name: '256' },\n  ];\n\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'ctr', name: 'CTR' },\n    { id: 'cfb8', name: 'CFB8' },\n    { id: 'cfb1', name: 'CFB1' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    keySize: '',\n    mode: '',\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0 });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find(\n      (cipher) => cipher.id === `aes-${values.keySize}-${values.mode}`,\n    );\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.keySize, values.mode]);\n\n  const schemaFiles = AESFilesSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `aes-${values.keySize}-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    console.log(errors);\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await encryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `aes-${values.keySize}-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await decryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    console.log(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, { name, value: data[name] });\n    console.log(error);\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL AES ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container' style={{ paddingTop: '0' }}>\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Select\n              label='Key Size'\n              name='keySize'\n              options={listKeySize}\n              //defaultValue={values.keySize}\n              error={errors['keySize']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n              // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== '' && values.keySize !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== '' && values.keySize !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />\n              </animated.div>\n            )}\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <DownloadList\n                list={downloadLinks}\n                onRemove={handleRemove}\n                onRemoveAll={handleRemoveAll}\n              />\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AESFile;\n","import { React, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport AESText from './AESText';\nimport AESFile from './AESFile';\n\nfunction AES() {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{paddingTop: '90px'}}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <AESText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <AESFile />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AES;\n","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport {\n  getListAlgorithm,\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/symmertric.service';\nimport { calculatorLength, BlowFishTextSchema } from '../../validations/blowfish.schema';\n\nexport function BlowFishText() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'cfb', name: 'CFB' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [result, setResult] = useState('');\n  const [errors, setErrors] = useState({});\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    text: '',\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    mode: '',\n  });\n\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0 });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find(\n      (cipher) => cipher.id === `bf-${values.mode}`,\n    );\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.mode]);\n\n  const schemaText = BlowFishTextSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `bf-${values.mode}`\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const payload = { ...values };\n      delete payload.mode;\n      const response = await encryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `bf-${values.mode}`\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const payload = { ...values };\n      delete payload.mode;\n      const response = await decryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL BLOWFISH ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='text'\n              error={errors['text']}\n              isHasCopy={values.text !== ''}\n              onChange={handleChange}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n             // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== '' && values.keySize !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <Textarea\n              label='Result'\n              name='result'\n              value={result}\n              isHasCopy={result !== ''}\n              onChange={() => {}}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlowFishText;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport {\n  getListAlgorithm,\n  encryptFile,\n  decryptFile,\n  getKeyValue,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  BlowFishFilesSchema,\n} from '../../validations/blowfish.schema';\n\nfunction BlowFishFile() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'cfb', name: 'CFB' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    mode: '',\n  });\n\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === `bf-${values.mode}`);\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.mode]);\n\n  const schemaFiles = BlowFishFilesSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `bf-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await encryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `bf-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await decryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL AES ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container' style={{ paddingTop: '0' }}>\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n              // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />\n              </animated.div>\n            )}\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <DownloadList\n                list={downloadLinks}\n                onRemove={handleRemove}\n                onRemoveAll={handleRemoveAll}\n              />\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlowFishFile;\n","import { React, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport BlowFishText from './BlowFishText';\nimport BlowFishFile from './BlowFishFile';\n\nfunction BlowFish() {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{paddingTop: '90px'}}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <BlowFishText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <BlowFishFile />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default BlowFish;\n","import http from './base-http.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/hash';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint);\n};\n\nconst getValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst generateChecksum = (payload) => {\n  const formData = new FormData();\n  formData.append('file', payload.file);\n  formData.append('algorithm', payload.algorithm);\n  return http.post(apiEndpoint + '/generate', formData);\n};\n\nconst verifyChecksum = (payload) => {\n  const formData = new FormData();\n  formData.append('file', payload.file);\n  formData.append('algorithm', payload.algorithm);\n  formData.append('hash', payload.hash);\n  return http.post(apiEndpoint + '/verify', formData);\n};\n\nexport { getListAlgorithm, getValue, generateChecksum, verifyChecksum };\n","import * as Joi from 'joi';\n\nconst ParamsHashSchema = Joi.object({\n  file: Joi.any().required(),\n  algorithm: Joi.string().required().messages({\n    'any.required': `\"algorithm\" is not allowed to be empty`,\n    'string.base': `\"algorithm\" should be a type of 'text'`,\n  }),\n});\n\nconst ParamsVerifySchema = ParamsHashSchema.keys({\n  hash: Joi.string().required().messages({\n    'any.required': `\"hash\" is not allowed to be empty`,\n    'string.base': `\"hash\" should be a type of 'text'`,\n  }),\n});\n\nexport { ParamsHashSchema, ParamsVerifySchema };\n","import { useState, useEffect } from 'react';\nimport { getListAlgorithm } from '../../services/hash.service';\nimport { toast } from 'react-toastify';\n\nconst useAlgoHash = () => {\n  const [algorithms, setAlgorithms] = useState([]);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setStatus('loading');\n        const listAlgorithms = await getListAlgorithm();\n        setAlgorithms(listAlgorithms.data);\n        setStatus('done');\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n        setStatus('error');\n      }\n    })();\n  }, []);\n  return [status, algorithms];\n};\n\nexport { useAlgoHash };\n","import React, { useState } from 'react';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport Textarea from '../common/Textarea';\nimport { toast } from 'react-toastify';\nimport { generateChecksum } from '../../services/hash.service';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { ParamsHashSchema } from '../../validations/hash.schema';\nimport { useAlgoHash } from '../hooks/AlgoHash';\n\nconst GenerateHash = () => {\n  const [values, setValues] = useState({\n    file: undefined,\n    algorithm: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [status, algorithms] = useAlgoHash();\n  const [statusLoading, setStatusLoading] = useState(false);\n  const [result, setResult] = useState('');\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(ParamsHashSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleGenerate = async () => {\n    const errors = validateForm(ParamsHashSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading(true);\n      const response = await generateChecksum(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(() => setStatusLoading(false), 500);\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL GENERATE CHECKSUM</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Input\n              label='File'\n              name='file'\n              type='file'\n              error={errors['file']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Hash result'\n              name='result'\n              value={result}\n              rows='2'\n              readOnly\n              isHasCopy={result !== ''}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Generate'\n                isLoading={statusLoading}\n                disabled={validateForm(ParamsHashSchema, values) !== null}\n                onClick={handleGenerate}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateHash;\n","import React, { useState } from 'react';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport Alert from '../common/Alert';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport { getValue, verifyChecksum } from '../../services/hash.service';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { ParamsVerifySchema } from '../../validations/hash.schema';\nimport { useAlgoHash } from '../hooks/AlgoHash';\n\nconst VerifyHash = () => {\n  const [values, setValues] = useState({\n    file: undefined,\n    algorithm: '',\n    hash: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [status, algorithms] = useAlgoHash();\n  const [statusLoading, setStatusLoading] = useState(false);\n  const [result, setResult] = useState({\n    type: 'danger',\n    result: false,\n    show: false,\n    message: function () {\n      if (this.result) return 'The hash is match';\n      return 'The hash does not match';\n    },\n  });\n  const styleAlert = useSpring({\n    opacity: result.show ? 1 : 0,\n    config: config.molasses,\n  });\n\n  const handleGetValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getValue(files[0]);\n        data.hash = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(ParamsVerifySchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleClose = () => {\n    const data = { ...result };\n    data.show = false;\n    setResult(data);\n  };\n\n  const handleVerify = async () => {\n    const errors = validateForm(ParamsVerifySchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading(true);\n      const response = await verifyChecksum(values);\n      const data = { ...result };\n      data.result = response.data;\n      data.show = true;\n      data.type = response.data ? 'success' : 'danger';\n      setResult(data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(() => setStatusLoading(false), 500);\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL VERIFY CHECKSUM</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Input\n              label='File'\n              name='file'\n              type='file'\n              error={errors['file']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Hash'\n              name='hash'\n              value={values.hash}\n              error={errors['hash']}\n              isHasCopy={values.hash !== ''}\n              onGetFile={handleGetValue}\n              onChange={handleChange}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Vefify'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading}\n                disabled={validateForm(ParamsVerifySchema, values) !== null}\n                onClick={handleVerify}\n              />\n            </div>\n            {result.show && (\n              <animated.div style={styleAlert} className='mb-3'>\n                <Alert\n                  type={result.type}\n                  message={result.message()}\n                  onClick={handleClose}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyHash;\n","import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport GenerateHash from './GenerateHash';\nimport VerifyHash from './VerifyHash';\n\nconst Hash = () => {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Generate\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  Verify\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <GenerateHash />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <VerifyHash />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Hash;\n","import http from './base-http.service';\nimport { uploadFilesAdvanced } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/asymmetric/advanced';\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAdvanced(\n    apiEndpoint + '/encrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAdvanced(\n    apiEndpoint + '/decrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nexport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport Textarea from '../common/Textarea';\nimport Select from '../common/Select';\nimport { FileAsymmetricAdvancedSchema } from '../../validations/asymmetric.schema';\nimport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n} from '../../services/advance.service';\nimport KeyGenerator from '../asymmetric/KeyGenerator';\nimport { generateRandomString } from '../../utils/string.util';\nimport { randomBytes } from 'crypto';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nconst AdvancedFile = () => {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listRadioKey = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const [status, algorithms] = useAlgoSymmetric();\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n    algorithm: '',\n    symKey: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricAdvancedSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricAdvancedSchema, {\n      name,\n      value: data[name],\n    });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(FileAsymmetricAdvancedSchema, values);\n    setErrors(errors || {});\n    console.log(errors);\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const dataLink = [...downloadLinks];\n\n      //filter a file difference\n      const listDownloadFile = response.data.filter(\n        (file) => !dataLink.some((item) => file.fileName === item.fileName),\n      );\n\n      setDownloadLinks([...dataLink, ...listDownloadFile]);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(FileAsymmetricAdvancedSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    console.log(values);\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const dataLink = [...downloadLinks];\n\n      //filter a file difference\n      const listDownloadFile = response.data.filter(\n        (file) => !dataLink.some((item) => file.fileName === item.fileName),\n      );\n\n      setDownloadLinks([...dataLink, ...listDownloadFile]);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetValue = async (files, name = 'key') => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data[name] = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='card'>\n              <div className='card-header'>ADVANCED TOOL </div>\n              <div className='card-body'>\n                <div className='container' style={{ paddingTop: '0' }}>\n                  <form>\n                    <FileUpload\n                      error={errors['files']}\n                      percentage={percentage}\n                      progress={progress}\n                      onGetFiles={handleGetFiles}\n                    />\n                    <Textarea\n                      label='Public key/Private key'\n                      name='key'\n                      error={errors['key']}\n                      value={values.key}\n                      onGetFile={handleGetValue}\n                      onChange={handleChange}\n                    />\n                    <RadioButton\n                      name='isPublicKey'\n                      radios={listRadioKey}\n                      onChange={handleChecked}\n                    />\n                    <Input\n                      label='Passphrase'\n                      name='passphrase'\n                      error={errors['passphrase']}\n                      onChange={handleChange}\n                    />\n                    <Select\n                      label='Algorithm'\n                      name='algorithm'\n                      options={algorithms}\n                      status={status}\n                      error={errors['algorithm']}\n                      onChange={handleChange}\n                    />\n                    <Input\n                      label='Key Symmetric'\n                      name='symKey'\n                      value={values.symKey}\n                      error={errors['symKey']}\n                      nameFile='symKey'\n                      isHasCopy={values.symKey !== ''}\n                      onGetFile={handleGetValue}\n                      onChange={handleChange}\n                    />\n                    <RadioButton\n                      name='isHexKey'\n                      radios={listMode}\n                      onChange={handleChecked}\n                      isEnableGen={values.algorithm !== ''}\n                      onGenerate={() => handleGeneator('symKey', 'keyLength')}\n                    />\n                    {showIV && (\n                      <animated.div style={styleIV}>\n                        <Input\n                          label='Initial Vector'\n                          name='iv'\n                          value={values.iv}\n                          error={errors['iv']}\n                          isHasCopy={values.iv !== ''}\n                          onGetFile={handleGetValue}\n                          nameFile='iv'\n                          onChange={handleChange}\n                        />\n                        <RadioButton\n                          name='isHexIv'\n                          radios={listMode}\n                          onChange={handleChecked}\n                          isEnableGen={values.algorithm !== ''}\n                          onGenerate={() => handleGeneator('iv', 'ivLength')}\n                        />{' '}\n                      </animated.div>\n                    )}\n                    <div className='mb-3'>\n                      <Button\n                        text='Encrypt'\n                        size='btn-lg'\n                        style={{ marginRight: '10px' }}\n                        isLoading={statusLoading.encrypt}\n                        onClick={handleEncrypt}\n                      />\n                      <Button\n                        text='Decrypt'\n                        size='btn-lg'\n                        isLoading={statusLoading.decrypt}\n                        onClick={handleDecrypt}\n                      />\n                    </div>\n                    <span ref={downloadListRef}></span>\n                    {downloadLinks.length > 0 && (\n                      <animated.div style={styleDownloadList}>\n                        <DownloadList\n                          list={downloadLinks}\n                          onRemove={handleRemove}\n                          onRemoveAll={handleRemoveAll}\n                        />\n                      </animated.div>\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='col-md-4'>\n            <KeyGenerator />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdvancedFile;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Symmetric from './symmetric/Symmetric';\nimport Asymmetric from './asymmetric/Asymmetric';\nimport AES from './aes/AES';\nimport BlowFish from './blowfish/BlowFish';\nimport Hash from './hash/Hash';\nimport AdvancedFile from './advanced/AdvancedFile';\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path='/aes' component={AES} />\n      <Route exact path='/blowfish' component={BlowFish} />\n      <Route exact path='/asymmetric' component={Asymmetric} />\n      <Route exact path='/hash' component={Hash} />\n      <Route exact path='/' component={Symmetric} />\n      <Route exact path='/advanced-file' component={AdvancedFile} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { ToastContainer } from 'react-toastify';\nimport { Navbar } from './components/Navbar';\nimport Router from './components/Router';\n\nconst App = () => {\n  return (\n    <>\n      <ToastContainer\n        position='top-center'\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Navbar />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './dropzone.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import Joi from 'joi';\n\nconst message = (name, isBuffer, length) => {\n  if (length === 0) return '\"algorithm\" is required';\n  const typeMessage = isBuffer ? 'hex characters' : 'bytes';\n  return `\"${name}\" is not valid. Key must be {#limit} ${typeMessage}`;\n};\n\nconst calculatorLength = (algorithms, values) => {\n  const algoInfo = algorithms.find((cipher) => cipher.id === values.algorithm);\n  if (!algoInfo)\n    return { keyLength: 0, ivLength: 0, isHexKey: false, isHexIv: false };\n  const { key, isHexKey, iv, isHexIv } = values;\n  const isHasIV = algoInfo.hasOwnProperty('ivLength');\n\n  const keyLength =\n    key && isHexKey\n      ? Buffer.alloc(algoInfo.keyLength).toString('hex').length\n      : algoInfo.keyLength;\n\n  const ivLength =\n    iv && isHasIV && isHexIv // case has iv and iv is hex string\n      ? Buffer.alloc(algoInfo.ivLength).toString('hex').length\n      : isHasIV // case has iv and iv is normal string\n      ? algoInfo.ivLength\n        : 0;\n  return { keyLength, ivLength, isHexKey, isHexIv };\n};\n\nconst BaseSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  // Original Schema\n  const schema = Joi.object({\n    algorithm: Joi.string().required().messages({\n      'string.base': `\"algorithm\" should be a type of 'text'`,\n      'any.required': `\"algorithm' is not allowed to be empty`,\n    }),\n    isHexKey: Joi.boolean().required(),\n    isHexIv: Joi.boolean(),\n    key: Joi.string()\n      .required()\n      .min(keyLength)\n      .max(keyLength)\n      // .when('isHexKey', {\n      //   is: true,\n      //   then: Joi.string().hex(),\n      // })\n\n      .messages({\n        'string.base': `\"key\" should be a type of 'text'`,\n        'string.max': message('key', isHexKey, keyLength),\n        'string.min': message('key', isHexKey, keyLength),\n        'string.hex': `\"key\" is not a valid hexadecimal string`,\n        'any.required': `\"key\" is not allowed to be empty`,\n      }),\n  });\n\n  if (ivLength === 0)\n    return schema.keys({\n      iv: Joi.optional(),\n    });\n  return schema\n    .keys({\n      iv: Joi.string().min(ivLength).max(ivLength)\n      // iv: Joi.when(isHexIv, {\n      //   is: Joi.exist().valid(true),\n      //   then: Joi.string().min(ivLength).max(ivLength).hex(),\n      //   otherwise: Joi.string().min(ivLength).max(ivLength),\n      // }),\n    })\n    .messages({\n      'string.base': `\"iv\" should be a type of 'text'`,\n      'string.max': message('iv', isHexIv),\n      'string.min': message('iv', isHexIv),\n      'string.hex': `\"iv\" is not a valid hexadecimal string`,\n      'any.required': `\"iv\" is not allowed to be empty`,\n    });\n};\n\nconst FileSymmetricSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    files: Joi.any().required(),\n  });\n};\n\nconst TextSymmetricSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    text: Joi.string().required().messages({\n      'string.base': `\"text\" should be a type of 'text'`,\n      'any.required': `\"text\" is not allowed to be empty`,\n    }),\n  });\n};\n\nexport { calculatorLength, TextSymmetricSchema, FileSymmetricSchema };\n","import Joi from 'joi';\n\nconst message = (name, isBuffer, length) => {\n  if (length === 0) return '\"algorithm\" is required';\n  const typeMessage = isBuffer ? 'hex characters' : 'bytes';\n  return `\"${name}\" is not valid. Key must be {#limit} ${typeMessage}`;\n};\n\nconst calculatorLength = (algorithms, values) => {\n  const algoInfo = algorithms.find((cipher) => cipher.id === `aes-${values.keySize}-${values.mode}`);\n  if (!algoInfo)\n    return { keyLength: 0, ivLength: 0, isHexKey: false, isHexIv: false };\n  const { key, isHexKey, iv, isHexIv } = values;\n  const isHasIV = algoInfo.hasOwnProperty('ivLength');\n\n  const keyLength =\n    key && isHexKey\n      ? Buffer.alloc(algoInfo.keyLength).toString('hex').length\n      : algoInfo.keyLength;\n\n  const ivLength =\n    iv && isHasIV && isHexIv // case has iv and iv is hex string\n      ? Buffer.alloc(algoInfo.ivLength).toString('hex').length\n      : isHasIV // case has iv and iv is normal string\n      ? algoInfo.ivLength\n      : 0;\n  return { keyLength, ivLength, isHexKey, isHexIv };\n};\n\nconst BaseSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  // Original Schema\n  const schema = Joi.object({\n    algorithm: Joi.string().required().messages({\n      'string.base': `\"algorithm\" should be a type of 'text'`,\n      'any.required': `\"algorithm' is not allowed to be empty`,\n    }),\n    keySize: Joi.string().required().default('128'),\n    mode: Joi.string().required().default('ecb'),\n    isHexKey: Joi.boolean().required(),\n    isHexIv: Joi.boolean(),\n    key: Joi.string()\n      .required()\n      .min(keyLength)\n      .max(keyLength)\n      // .when('isHexKey', {\n      //   is: true,\n      //   then: Joi.string().hex(),\n      // })\n\n      .messages({\n        'string.base': `\"key\" should be a type of 'text'`,\n        'string.max': message('key', isHexKey, keyLength),\n        'string.min': message('key', isHexKey, keyLength),\n        'string.hex': `\"key\" is not a valid hexadecimal string`,\n        'any.required': `\"key\" is not allowed to be empty`,\n      }),\n  });\n\n  if (ivLength === 0)\n    return schema.keys({\n      iv: Joi.optional(),\n    });\n  return schema\n    .keys({\n      iv: Joi.string().min(ivLength).max(ivLength),\n      // iv: Joi.when(isHexIv, {\n      //   is: Joi.exist().valid(true),\n      //   then: Joi.string().min(ivLength).max(ivLength).hex(),\n      //   otherwise: Joi.string().min(ivLength).max(ivLength),\n      // }),\n    })\n    .messages({\n      'string.base': `\"iv\" should be a type of 'text'`,\n      'string.max': message('iv', isHexIv),\n      'string.min': message('iv', isHexIv),\n      'string.hex': `\"iv\" is not a valid hexadecimal string`,\n      'any.required': `\"iv\" is not allowed to be empty`,\n    });\n};\n\nconst AESFilesSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    files: Joi.array().min(1).required(),\n  });\n};\n\nconst AESTextSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    text: Joi.string().required().messages({\n      'string.base': `\"text\" should be a type of 'text'`,\n      'any.required': `\"text\" is not allowed to be empty`,\n    }),\n  });\n};\n\nexport { calculatorLength, AESTextSchema, AESFilesSchema };\n","import Joi from 'joi';\n\nconst message = (name, isBuffer, length) => {\n  if (length === 0) return '\"algorithm\" is required';\n  const typeMessage = isBuffer ? 'hex characters' : 'bytes';\n  return `\"${name}\" is not valid. Key must be {#limit} ${typeMessage}`;\n};\n\nconst calculatorLength = (algorithms, values) => {\n  const algoInfo = algorithms.find(\n    (cipher) => cipher.id === `bf-${values.mode}`,\n  );\n  if (!algoInfo)\n    return { keyLength: 0, ivLength: 0, isHexKey: false, isHexIv: false };\n  const { key, isHexKey, iv, isHexIv } = values;\n  const isHasIV = algoInfo.hasOwnProperty('ivLength');\n\n  const keyLength =\n    key && isHexKey\n      ? Buffer.alloc(algoInfo.keyLength).toString('hex').length\n      : algoInfo.keyLength;\n\n  const ivLength =\n    iv && isHasIV && isHexIv // case has iv and iv is hex string\n      ? Buffer.alloc(algoInfo.ivLength).toString('hex').length\n      : isHasIV // case has iv and iv is normal string\n      ? algoInfo.ivLength\n      : 0;\n  return { keyLength, ivLength, isHexKey, isHexIv };\n};\n\nconst BaseSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  // Original Schema\n  const schema = Joi.object({\n    algorithm: Joi.string().required().messages({\n      'string.base': `\"algorithm\" should be a type of 'text'`,\n      'any.required': `\"algorithm' is not allowed to be empty`,\n    }),\n    mode: Joi.string().required().default('ecb'),\n    isHexKey: Joi.boolean().required(),\n    isHexIv: Joi.boolean(),\n    key: Joi.string()\n      .required()\n      .min(keyLength)\n      .max(keyLength)\n      // .when('isHexKey', {\n      //   is: true,\n      //   then: Joi.string().hex(),\n      // })\n\n      .messages({\n        'string.base': `\"key\" should be a type of 'text'`,\n        'string.max': message('key', isHexKey, keyLength),\n        'string.min': message('key', isHexKey, keyLength),\n        'string.hex': `\"key\" is not a valid hexadecimal string`,\n        'any.required': `\"key\" is not allowed to be empty`,\n      }),\n  });\n\n  if (ivLength === 0)\n    return schema.keys({\n      iv: Joi.optional(),\n    });\n  return schema\n    .keys({\n      iv: Joi.string().min(ivLength).max(ivLength),\n      // iv: Joi.when(isHexIv, {\n      //   is: Joi.exist().valid(true),\n      //   then: Joi.string().min(ivLength).max(ivLength).hex(),\n      //   otherwise: Joi.string().min(ivLength).max(ivLength),\n      // }),\n    })\n    .messages({\n      'string.base': `\"iv\" should be a type of 'text'`,\n      'string.max': message('iv', isHexIv),\n      'string.min': message('iv', isHexIv),\n      'string.hex': `\"iv\" is not a valid hexadecimal string`,\n      'any.required': `\"iv\" is not allowed to be empty`,\n    });\n};\n\nconst BlowFishFilesSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    files: Joi.array().min(1).required(),\n  });\n};\n\nconst BlowFishTextSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    text: Joi.string().required().messages({\n      'string.base': `\"text\" should be a type of 'text'`,\n      'any.required': `\"text\" is not allowed to be empty`,\n    }),\n  });\n};\n\nexport { calculatorLength, BlowFishTextSchema, BlowFishFilesSchema };\n"],"sourceRoot":""}