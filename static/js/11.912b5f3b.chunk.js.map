{"version":3,"sources":["components/common/Alert.jsx","components/asymmetric/AsymmetricFile.jsx","components/asymmetric/AsymmetricText.jsx","components/asymmetric/Asymmetric.jsx"],"names":["Alert","message","type","isHasClose","rest","icon","faInfoCircle","faExclamationTriangle","faCheckCircle","className","role","style","marginRight","AsymmetricFile","downloadListRef","useRef","useState","errors","setErrors","files","key","passphrase","isPublicKey","values","setValues","downloadLinks","setDownloadLinks","percentage","setPercentage","progress","setProgress","encrypt","decrypt","statusLoading","setStatusLoading","styleDownloadList","useSpring","opacity","length","config","stiff","handleChange","input","currentTarget","errorsData","error","validateProperty","FileAsymmetricSchema","name","data","value","handleEncrypt","a","validateForm","console","log","encryptFile","event","Math","round","loaded","total","response","listDownloadFile","filter","file","some","item","fileName","listDownload","scrollToRef","toast","setTimeout","handleDecrypt","decryptFile","handleGetKeyValue","getKeyValue","FileUpload","onGetFiles","listFiles","Textarea","label","isHasCopy","onGetFile","onChange","RadioButton","radios","id","text","checked","Input","Button","size","isLoading","onClick","ref","div","DownloadList","list","onRemove","newFiles","splice","indexOf","onRemoveAll","AsymmetricText","result","setResult","TextAsymmetricSchema","encryptText","decryptText","readOnly","Asymmetric","props","tab","setTab","styleText","styleFile","handleChangeTab","paddingTop","KeyGenerator"],"mappings":"+IA8BeA,IAtBD,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,QAA4D,IAAnDC,YAAmD,MAA5C,UAA4C,MAAjCC,kBAAiC,SAAXC,EAAW,+CACrEC,EACK,YAATH,EACII,IACS,WAATJ,EACAK,IACAC,IAEN,OACE,sBACEC,UAAS,sBAAiBP,EAAjB,gCACTQ,KAAK,QAFP,UAIE,cAAC,IAAD,CAAiBL,KAAMA,EAAMM,MAAO,CAAEC,YAAa,UAClDX,EACAE,GACC,oCAAQD,KAAK,SAASO,UAAU,aAAgBL,S,8MC+MzCS,EArNQ,WACrB,IAIMC,EAAkBC,iBAAO,MALJ,EAMCC,mBAAS,IANV,mBAMpBC,EANoB,KAMZC,EANY,OAOCF,mBAAS,CACnCG,MAAO,GACPC,IAAK,GACLC,WAAY,GACZC,aAAa,IAXY,mBAOpBC,EAPoB,KAOZC,EAPY,OAaeR,mBAAS,IAbxB,mBAapBS,EAboB,KAaLC,EAbK,OAcSV,mBAAS,GAdlB,mBAcpBW,EAdoB,KAcRC,EAdQ,OAeKZ,mBAAS,UAfd,mBAepBa,EAfoB,KAeVC,EAfU,OAgBed,mBAAS,CACjDe,SAAS,EACTC,SAAS,IAlBgB,mBAgBpBC,EAhBoB,KAgBLC,EAhBK,KAoBrBC,EAAoBC,oBAAU,CAClCC,QAASZ,EAAca,OAAS,EAAI,EAAI,EACxCC,OAAQA,SAAOC,QAGXC,EAAe,SAAC,GAA8B,IAAbC,EAAY,EAA3BC,cAChBC,EAAU,eAAQ3B,GAClB4B,EAAQC,YAAiBC,IAAsBL,GACjDG,EAAOD,EAAWF,EAAMM,MAAQH,SACxBD,EAAWF,EAAMM,MAC7B9B,EAAU0B,GACV,IAAMK,EAAI,eAAQ1B,GAClB0B,EAAKP,EAAMM,MAAQN,EAAMQ,MACzB1B,EAAUyB,IAUNE,EAAa,uCAAG,oCAAAC,EAAA,yDACdnC,EAASoC,YAAaN,IAAsBxB,GAClDL,EAAUD,GAAU,IACpBqC,QAAQC,IAAItC,IACRA,EAJgB,iEAMlBiB,EAAiB,2BAAKD,GAAN,IAAqBF,SAAS,KAC9CD,EAAY,gBAPM,UAQK0B,YAAYjC,GAAQ,SAACkC,GAC1C7B,EAAc8B,KAAKC,MAAO,IAAMF,EAAMG,OAAUH,EAAMI,WATtC,QAQZC,EARY,OAWlBhC,EAAY,QACNiC,EAAmBD,EAASb,KAAKe,QACrC,SAACC,GAAD,OACGxC,EAAcyC,MAAK,SAACC,GAAD,OAAUF,EAAKG,WAAaD,EAAKC,eAEnDC,EAhBY,sBAgBON,GAhBP,YAgB4BtC,IAC9CC,EAAiB2C,GACjBC,YAAYxD,GAlBM,kDAoBlBgB,EAAY,SACR,KAAMgC,WACA7D,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,IAvBI,yBA0BlBuE,YACE,kBAAMtC,EAAiB,2BAAKD,GAAN,IAAqBF,SAAS,OACpD,KA5BgB,6EAAH,qDAiCb0C,EAAa,uCAAG,oCAAArB,EAAA,yDACdnC,EAASoC,YAAaN,IAAsBxB,GAClDL,EAAUD,GAAU,KAChBA,EAHgB,iEAKlBiB,EAAiB,2BAAKD,GAAN,IAAqBD,SAAS,KAC9CF,EAAY,gBANM,SAOK4C,YAAYnD,GAAQ,SAACkC,GAC1C7B,EAAc8B,KAAKC,MAAO,IAAMF,EAAMG,OAAUH,EAAMI,WARtC,OAOZC,EAPY,OAUlBhC,EAAY,QACNiC,EAAmBD,EAASb,KAAKe,QACrC,SAACC,GAAD,OACGxC,EAAcyC,MAAK,SAACC,GAAD,OAAUF,EAAKG,WAAaD,EAAKC,eAEnDC,EAfY,sBAeON,GAfP,YAe4BtC,IAC9CC,EAAiB2C,GACjBC,YAAYxD,GAjBM,kDAmBlBgB,EAAY,SACR,KAAMgC,WACA7D,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,IAtBI,yBAyBlBuE,YACE,kBAAMtC,EAAiB,2BAAKD,GAAN,IAAqBD,SAAS,OACpD,KA3BgB,6EAAH,qDAyCb2C,EAAiB,uCAAG,WAAOxD,GAAP,mBAAAiC,EAAA,2DACpBjC,EAAMmB,OAAS,GADK,iCAGdW,EAHc,eAGF1B,GAHE,SAIGqD,YAAYzD,EAAM,IAJrB,OAId2C,EAJc,OAKpBb,EAAK7B,IAAM0C,EAASb,KACpBzB,EAAUyB,GANU,kDAQhB,KAAMa,WACA7D,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,IAVM,0DAAH,sDAyBvB,OACE,sBAAKQ,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,8BACA,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACT,EAAA,EAAD,CACEE,KAAK,UACLD,QAAQ,uCACRE,YAAY,IAEd,iCACE,cAAC0E,EAAA,EAAD,CACEhC,MAAO5B,EAAM,MACbU,WAAYA,EACZE,SAAUA,EACViD,WAjDW,SAAC3D,GACtB,IAAM8B,EAAI,eAAQ1B,GACZwD,EAAS,YAAO5D,GACtB8B,EAAK9B,MAAQ4D,EACbvD,EAAUyB,GACVrB,EAAc,GACdE,EAAY,aA6CJ,cAACkD,EAAA,EAAD,CACEC,MAAM,yBACNjC,KAAK,MACLH,MAAO5B,EAAM,IACbiC,MAAO3B,EAAOH,IACd8D,UAA0B,KAAf3D,EAAOH,IAClB+D,UAAWR,EACXS,SAAU3C,IAEZ,cAAC4C,EAAA,EAAD,CACErC,KAAK,cACLsC,OAzKI,CACd,CAAEC,GAAI,YAAaC,KAAM,aAAcC,SAAS,GAChD,CAAEF,GAAI,aAAcC,KAAM,cAAeC,SAAS,IAwKxCL,SAvIU,SAAC,GAA8B,IAAb1C,EAAY,EAA3BC,cACf4C,EAAa7C,EAAb6C,GAAIvC,EAASN,EAATM,KACNC,EAAI,eAAQ1B,GAClB0B,EAAKD,GAAe,cAAPuC,EACb/D,EAAUyB,MAqIF,cAACyC,EAAA,EAAD,CACET,MAAM,aACNjC,KAAK,aACLE,MAAO3B,EAAOF,WACdwB,MAAO5B,EAAM,WACbiE,UAAiC,KAAtB3D,EAAOF,WAClB+D,SAAU3C,IAEZ,sBAAKhC,UAAU,OAAf,UACE,cAACkF,EAAA,EAAD,CACEH,KAAK,UACLI,KAAK,SACLC,UAAW5D,EAAcF,QACzBpB,MAAO,CAAEC,YAAa,QACtBkF,QAAS3C,IAEX,cAACwC,EAAA,EAAD,CACEH,KAAK,UACLK,UAAW5D,EAAcD,QACzB4D,KAAK,SACLE,QAASrB,OAGb,sBAAMsB,IAAKjF,IACVW,EAAca,OAAS,GACtB,cAAC,WAAS0D,IAAV,CAAcrF,MAAOwB,EAArB,SACE,cAAC8D,EAAA,EAAD,CACEC,KAAMzE,EACN0E,SArEK,SAAClC,GAAD,OAAU,WAC7B,IAAMmC,EAAQ,YAAO3E,GACrB2E,EAASC,OAAOD,EAASE,QAAQrC,GAAO,GACxCvC,EAAiB0E,KAmEHG,YAhEQ,WACtB7E,EAAiB,qBCWN8E,EA1JQ,WACrB,IAD2B,EAKCxF,mBAAS,IALV,mBAKpBC,EALoB,KAKZC,EALY,OAMCF,mBAAS,IANV,mBAMpByF,EANoB,KAMZC,EANY,OAOC1F,mBAAS,CACnCiC,KAAM,GACN7B,IAAK,GACLC,WAAY,GACZC,aAAa,IAXY,mBAOpBC,EAPoB,KAOZC,EAPY,OAaeR,mBAAS,CACjDe,SAAS,EACTC,SAAS,IAfgB,mBAapBC,EAboB,KAaLC,EAbK,KAkBrBO,EAAe,SAAC,GAA8B,IAAbC,EAAY,EAA3BC,cAChBC,EAAU,eAAQ3B,GAClB4B,EAAQC,YAAiB6D,IAAsBjE,GACjDG,EAAOD,EAAWF,EAAMM,MAAQH,SACxBD,EAAWF,EAAMM,MAC7B9B,EAAU0B,GACV,IAAMK,EAAI,eAAQ1B,GAClB0B,EAAKP,EAAMM,MAAQN,EAAMQ,MACzB1B,EAAUyB,IAUNE,EAAa,uCAAG,gCAAAC,EAAA,yDACdnC,EAASoC,YAAasD,IAAsBpF,GAClDL,EAAUD,GAAU,KAChBA,EAHgB,iEAKlBiB,EAAiB,2BAAKD,GAAN,IAAqBF,SAAS,KAL5B,SAMK6E,YAAYrF,GANjB,OAMZuC,EANY,OAOlB4C,EAAU5C,EAASb,MAPD,kDASVhD,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,GAVM,yBAYlBuE,YACE,kBAAMtC,EAAiB,2BAAKD,GAAN,IAAqBF,SAAS,OACpD,KAdgB,6EAAH,qDAmBb0C,EAAa,uCAAG,gCAAArB,EAAA,yDACdnC,EAASoC,YAAasD,IAAsBpF,GAClDL,EAAUD,GAAU,KAChBA,EAHgB,iEAKlBiB,EAAiB,2BAAKD,GAAN,IAAqBD,SAAS,KAL5B,SAMK6E,YAAYtF,GANjB,OAMZuC,EANY,OAOlB4C,EAAU5C,EAASb,MAPD,kDASVhD,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,GAVM,yBAYlBuE,YACE,kBAAMtC,EAAiB,2BAAKD,GAAN,IAAqBD,SAAS,OACpD,KAdgB,6EAAH,qDAmBb2C,EAAiB,uCAAG,WAAOxD,GAAP,mBAAAiC,EAAA,2DACpBjC,EAAMmB,OAAS,GADK,iCAGdW,EAHc,eAGF1B,GAHE,SAIGqD,YAAYzD,EAAM,IAJrB,OAId2C,EAJc,OAKpBb,EAAK7B,IAAM0C,EAASb,KACpBzB,EAAUyB,GANU,kDAQhB,KAAMa,WACA7D,EAAY,KAAM6D,SAASb,KAA3BhD,QACRsE,IAAM1B,MAAM5C,IAVM,0DAAH,sDAevB,OACE,sBAAKQ,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,8BACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,iCACE,cAACuE,EAAA,EAAD,CACEC,MAAM,OACNjC,KAAK,OACLH,MAAO5B,EAAM,KACbiC,MAAO3B,EAAO0B,KACdiC,UAA2B,KAAhB3D,EAAO0B,KAClBmC,SAAU3C,IAEZ,cAACuC,EAAA,EAAD,CACEC,MAAM,yBACNjC,KAAK,MACLH,MAAO5B,EAAM,IACbiC,MAAO3B,EAAOH,IACd8D,UAA0B,KAAf3D,EAAOH,IAClB+D,UAAWR,EACXS,SAAU3C,IAEZ,cAAC4C,EAAA,EAAD,CACErC,KAAK,cACLsC,OAjHI,CACd,CAAEC,GAAI,YAAaC,KAAM,aAAcC,SAAS,GAChD,CAAEF,GAAI,aAAcC,KAAM,cAAeC,SAAS,IAgHxCL,SAtFU,SAAC,GAA8B,IAAb1C,EAAY,EAA3BC,cACf4C,EAAa7C,EAAb6C,GAAIvC,EAASN,EAATM,KACNC,EAAI,eAAQ1B,GAClB0B,EAAKD,GAAe,cAAPuC,EACb/D,EAAUyB,MAoFF,cAACyC,EAAA,EAAD,CACET,MAAM,aACNjC,KAAK,aACLE,MAAO3B,EAAOF,WACdwB,MAAO5B,EAAM,WACbiE,UAAiC,KAAtB3D,EAAOF,WAClB+D,SAAU3C,IAEZ,cAACuC,EAAA,EAAD,CACEC,MAAM,SACNjC,KAAK,SACL8D,UAAQ,EACR5B,UAAsB,KAAXuB,EACXvD,MAAOuD,IAET,sBAAKhG,UAAU,OAAf,UACE,cAACkF,EAAA,EAAD,CACEH,KAAK,UACLI,KAAK,SACLjF,MAAO,CAAEC,YAAa,QACtBiF,UAAW5D,EAAcF,QACzB+D,QAAS3C,IAEX,cAACwC,EAAA,EAAD,CACEH,KAAK,UACLI,KAAK,SACLC,UAAW5D,EAAcD,QACzB8D,QAASrB,kB,SCzGVsC,UA/CI,SAACC,GAAW,IAAD,EACNhG,oBAAS,GADH,mBACrBiG,EADqB,KAChBC,EADgB,KAEtBC,EAAY/E,oBAAU,CAAEC,QAAS4E,EAAM,EAAI,IAC3CG,EAAYhF,oBAAU,CAAEC,QAAS4E,EAAM,EAAI,IAC3CI,EAAkB,WACtBH,GAAQD,IAEV,OACE,mCACE,qBAAKxG,UAAU,YAAYE,MAAO,CAAE2G,WAAY,QAAhD,SACE,sBAAK7G,UAAU,6BAAf,UACE,sBAAKA,UAAU,WAAf,UACA,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,yBAAf,UACE,wBACEqF,QAASuB,EACT5G,UAAW,YAAewG,EAAkB,GAAZ,WAFlC,kBAMA,wBACEnB,QAASuB,EACT5G,UAAW,YAAcwG,EAAM,UAAY,IAF7C,uBAQFA,EAKA,cAAC,WAASjB,IAAV,CAAcrF,MAAOyG,EAArB,SACE,cAAC,EAAD,MALF,eAAC,WAASpB,IAAV,CAAcrF,MAAOwG,EAArB,UACE,cAAC,EAAD,IAAmB,UAQzB,qBAAK1G,UAAU,WAAf,SACE,cAAC8G,EAAA,EAAD","file":"static/js/11.912b5f3b.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Alert = ({ message, type = 'primary', isHasClose = true, ...rest }) => {\n  const icon =\n    type === 'primary'\n      ? faInfoCircle\n      : type === 'danger'\n      ? faExclamationTriangle\n      : faCheckCircle;\n\n  return (\n    <div\n      className={`alert alert-${type} alert-dismissible fade show`}\n      role='alert'\n    >\n      <FontAwesomeIcon icon={icon} style={{ marginRight: '10px' }} />\n      {message}\n      {isHasClose && (\n        <button type='button' className='btn-close' {...rest}></button>\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Textarea from '../common/Textarea';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport Alert from '../common/Alert';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n} from '../../services/asymmetric.service';\nimport { FileAsymmetricSchema } from '../../validations/asymmetric.schema';\nimport Input from '../common/Input';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\n\nconst AsymmetricFile = () => {\n  const listRad = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const downloadListRef = useRef(null);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n  });\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(FileAsymmetricSchema, values);\n    setErrors(errors || {});\n    console.log(errors);\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(FileAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL RSA ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <Alert\n            type='primary'\n            message='Data must not be longer than keysize'\n            isHasClose={false}\n          />\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Textarea\n              label='Public key/Private key'\n              name='key'\n              error={errors['key']}\n              value={values.key}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isPublicKey'\n              radios={listRad}\n              onChange={handleChecked}\n            />\n            <Input\n              label='Passphrase'\n              name='passphrase'\n              value={values.passphrase}\n              error={errors['passphrase']}\n              isHasCopy={values.passphrase !== ''}\n              onChange={handleChange}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                isLoading={statusLoading.encrypt}\n                style={{ marginRight: '10px' }}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                isLoading={statusLoading.decrypt}\n                size='btn-lg'\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <animated.div style={styleDownloadList}>\n                <DownloadList\n                  list={downloadLinks}\n                  onRemove={handleRemove}\n                  onRemoveAll={handleRemoveAll}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AsymmetricFile;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Textarea from '../common/Textarea';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { validateProperty, validateForm } from '../common/Form';\nimport {\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/asymmetric.service';\nimport { TextAsymmetricSchema } from '../../validations/asymmetric.schema';\nimport Input from '../common/Input';\n\nconst AsymmetricText = () => {\n  const listRad = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const [errors, setErrors] = useState({});\n  const [result, setResult] = useState('');\n  const [values, setValues] = useState({\n    data: '',\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(TextAsymmetricSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(TextAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const response = await encryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      const { message } = error.response.data;\n      toast.error(message);\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(TextAsymmetricSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const response = await decryptText(values);\n      setResult(response.data);\n    } catch (error) {\n      const { message } = error.response.data;\n      toast.error(message);\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL RSA ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='data'\n              error={errors['data']}\n              value={values.data}\n              isHasCopy={values.data !== ''}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Public key/Private key'\n              name='key'\n              error={errors['key']}\n              value={values.key}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isPublicKey'\n              radios={listRad}\n              onChange={handleChecked}\n            />\n            <Input\n              label='Passphrase'\n              name='passphrase'\n              value={values.passphrase}\n              error={errors['passphrase']}\n              isHasCopy={values.passphrase !== ''}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Result'\n              name='result'\n              readOnly\n              isHasCopy={result !== ''}\n              value={result}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AsymmetricText;\n","import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport AsymmetricFile from './AsymmetricFile';\nimport AsymmetricText from './AsymmetricText';\nimport KeyGenerator from './KeyGenerator';\n\nconst Asymmetric = (props) => {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n          <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <AsymmetricText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <AsymmetricFile />\n              </animated.div>\n            )}\n          </div>\n          <div className='col-md-4'>\n            <KeyGenerator />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Asymmetric;\n"],"sourceRoot":""}