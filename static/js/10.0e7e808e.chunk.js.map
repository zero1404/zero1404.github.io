{"version":3,"sources":["components/common/Alert.jsx","services/hash.service.js","validations/hash.schema.js","components/hooks/AlgoHash.jsx","components/hash/GenerateHash.jsx","components/hash/VerifyHash.jsx","components/hash/Hash.jsx","components/common/Button.jsx","components/common/Input.jsx","components/common/Form.jsx","services/base-http.service.js","components/common/Select.jsx","components/common/InputFile.jsx","components/common/Clipboard.jsx","components/common/Textarea.jsx"],"names":["Alert","message","type","isHasClose","rest","icon","faInfoCircle","faExclamationTriangle","faCheckCircle","className","role","style","marginRight","apiEndpoint","api","generateChecksum","payload","formData","FormData","append","file","algorithm","http","post","verifyChecksum","hash","ParamsHashSchema","Joi","required","messages","ParamsVerifySchema","keys","useAlgoHash","useState","algorithms","setAlgorithms","status","setStatus","useEffect","a","get","listAlgorithms","data","toast","error","GenerateHash","undefined","values","setValues","errors","setErrors","statusLoading","setStatusLoading","result","setResult","handleChange","input","currentTarget","errorsData","validateProperty","name","files","value","handleGenerate","validateForm","response","setTimeout","Input","label","onChange","Select","options","Textarea","rows","readOnly","isHasCopy","Button","text","isLoading","disabled","onClick","VerifyHash","show","this","styleAlert","useSpring","opacity","config","molasses","handleGetValue","length","getKeyValue","handleVerify","onGetFile","div","Hash","tab","setTab","styleText","styleFile","handleChangeTab","paddingTop","color","size","classBtn","aria-hidden","nameFile","styles","txt","useRef","htmlFor","refElement","id","ref","schema","extract","validate","details","abortEarly","item","path","scrollToRef","window","scrollTo","top","current","offsetTop","left","behavior","axios","interceptors","use","staus","Promise","reject","headers","all","patch","delete","statusIcon","marginLeft","map","option","InputFile","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","faUpload","Clipboard","title","data-bs-original-title","e","select","document","execCommand","success","autoClose","hideProgressBar","txa"],"mappings":"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","file":"static/js/10.0e7e808e.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Alert = ({ message, type = 'primary', isHasClose = true, ...rest }) => {\n  const icon =\n    type === 'primary'\n      ? faInfoCircle\n      : type === 'danger'\n      ? faExclamationTriangle\n      : faCheckCircle;\n\n  return (\n    <div\n      className={`alert alert-${type} alert-dismissible fade show`}\n      role='alert'\n    >\n      <FontAwesomeIcon icon={icon} style={{ marginRight: '10px' }} />\n      {message}\n      {isHasClose && (\n        <button type='button' className='btn-close' {...rest}></button>\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n","import http from './base-http.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/hash';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint);\n};\n\nconst getValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst generateChecksum = (payload) => {\n  const formData = new FormData();\n  formData.append('file', payload.file);\n  formData.append('algorithm', payload.algorithm);\n  return http.post(apiEndpoint + '/generate', formData);\n};\n\nconst verifyChecksum = (payload) => {\n  const formData = new FormData();\n  formData.append('file', payload.file);\n  formData.append('algorithm', payload.algorithm);\n  formData.append('hash', payload.hash);\n  return http.post(apiEndpoint + '/verify', formData);\n};\n\nexport { getListAlgorithm, getValue, generateChecksum, verifyChecksum };\n","import * as Joi from 'joi';\n\nconst ParamsHashSchema = Joi.object({\n  file: Joi.any().required(),\n  algorithm: Joi.string().required().messages({\n    'any.required': `\"algorithm\" is not allowed to be empty`,\n    'string.base': `\"algorithm\" should be a type of 'text'`,\n  }),\n});\n\nconst ParamsVerifySchema = ParamsHashSchema.keys({\n  hash: Joi.string().required().messages({\n    'any.required': `\"hash\" is not allowed to be empty`,\n    'string.base': `\"hash\" should be a type of 'text'`,\n  }),\n});\n\nexport { ParamsHashSchema, ParamsVerifySchema };\n","import { useState, useEffect } from 'react';\nimport { getListAlgorithm } from '../../services/hash.service';\nimport { toast } from 'react-toastify';\n\nconst useAlgoHash = () => {\n  const [algorithms, setAlgorithms] = useState([]);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setStatus('loading');\n        const listAlgorithms = await getListAlgorithm();\n        setAlgorithms(listAlgorithms.data);\n        setStatus('done');\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n        setStatus('error');\n      }\n    })();\n  }, []);\n  return [status, algorithms];\n};\n\nexport { useAlgoHash };\n","import React, { useState } from 'react';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport Textarea from '../common/Textarea';\nimport { toast } from 'react-toastify';\nimport { generateChecksum } from '../../services/hash.service';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { ParamsHashSchema } from '../../validations/hash.schema';\nimport { useAlgoHash } from '../hooks/AlgoHash';\n\nconst GenerateHash = () => {\n  const [values, setValues] = useState({\n    file: undefined,\n    algorithm: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [status, algorithms] = useAlgoHash();\n  const [statusLoading, setStatusLoading] = useState(false);\n  const [result, setResult] = useState('');\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(ParamsHashSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleGenerate = async () => {\n    const errors = validateForm(ParamsHashSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading(true);\n      const response = await generateChecksum(values);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(() => setStatusLoading(false), 500);\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL GENERATE CHECKSUM</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Input\n              label='File'\n              name='file'\n              type='file'\n              error={errors['file']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Textarea\n              label='Hash result'\n              name='result'\n              value={result}\n              rows='2'\n              readOnly\n              isHasCopy={result !== ''}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Generate'\n                isLoading={statusLoading}\n                disabled={validateForm(ParamsHashSchema, values) !== null}\n                onClick={handleGenerate}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateHash;\n","import React, { useState } from 'react';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport Alert from '../common/Alert';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport { getValue, verifyChecksum } from '../../services/hash.service';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { ParamsVerifySchema } from '../../validations/hash.schema';\nimport { useAlgoHash } from '../hooks/AlgoHash';\n\nconst VerifyHash = () => {\n  const [values, setValues] = useState({\n    file: undefined,\n    algorithm: '',\n    hash: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [status, algorithms] = useAlgoHash();\n  const [statusLoading, setStatusLoading] = useState(false);\n  const [result, setResult] = useState({\n    type: 'danger',\n    result: false,\n    show: false,\n    message: function () {\n      if (this.result) return 'The hash is match';\n      return 'The hash does not match';\n    },\n  });\n  const styleAlert = useSpring({\n    opacity: result.show ? 1 : 0,\n    config: config.molasses,\n  });\n\n  const handleGetValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getValue(files[0]);\n        data.hash = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(ParamsVerifySchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleClose = () => {\n    const data = { ...result };\n    data.show = false;\n    setResult(data);\n  };\n\n  const handleVerify = async () => {\n    const errors = validateForm(ParamsVerifySchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading(true);\n      const response = await verifyChecksum(values);\n      const data = { ...result };\n      data.result = response.data;\n      data.show = true;\n      data.type = response.data ? 'success' : 'danger';\n      setResult(data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(() => setStatusLoading(false), 500);\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL VERIFY CHECKSUM</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Input\n              label='File'\n              name='file'\n              type='file'\n              error={errors['file']}\n              onChange={handleChange}\n            />\n            <Select\n              label='Algorithm'\n              name='algorithm'\n              options={algorithms}\n              status={status}\n              error={errors['algorithm']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Hash'\n              name='hash'\n              value={values.hash}\n              error={errors['hash']}\n              isHasCopy={values.hash !== ''}\n              onGetFile={handleGetValue}\n              onChange={handleChange}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Vefify'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading}\n                disabled={validateForm(ParamsVerifySchema, values) !== null}\n                onClick={handleVerify}\n              />\n            </div>\n            {result.show && (\n              <animated.div style={styleAlert} className='mb-3'>\n                <Alert\n                  type={result.type}\n                  message={result.message()}\n                  onClick={handleClose}\n                />\n              </animated.div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyHash;\n","import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport GenerateHash from './GenerateHash';\nimport VerifyHash from './VerifyHash';\n\nconst Hash = () => {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Generate\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  Verify\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <GenerateHash />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <VerifyHash />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Hash;\n","const Button = ({\n  text,\n  color = 'primary',\n  size = '',\n  isLoading = false,\n  ...rest\n}) => {\n  if (size) size = ' ' + size;\n  const classBtn = `btn btn-${color}${size}`;\n  return (\n    <>\n      {isLoading ? (\n        <button className={classBtn} style={{ marginRight: '10px' }} type='button' disabled>\n          <span\n            className='spinner-border spinner-border-sm'\n            role='status'\n            aria-hidden='true'\n          ></span>\n          {' '}Loading...\n        </button>\n      ) : (\n        <button type='button' className={classBtn} {...rest}>\n          {text}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Input = ({\n  label,\n  name,\n  type = 'text',\n  error,\n  nameFile,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txt = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}:{' '}\n          {onGetFile && <InputFile nameFile={nameFile} onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txt} />}\n        <input\n          type={type}\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          ref={txt}\n          {...rest}\n        />\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Input;\n","const validateProperty = (schema, { name, value }) => {\n  const schemaProperty = schema.extract(name);\n  const { error } = schemaProperty.validate(value);\n  return error ? error.details[0].message : null;\n};\n\nconst validateForm = (schema, data) => {\n  const options = { abortEarly: false };\n  const { error } = schema.validate(data, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n};\n\nconst scrollToRef = (ref) => {\n  setTimeout(() => {\n    ref &&\n      window.scrollTo({\n        top: ref.current.offsetTop,\n        left: 0,\n        behavior: 'smooth',\n      });\n  }, 500);\n};\n\nexport { validateProperty, validateForm, scrollToRef };\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport config from '../config/default.json';\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.staus < 500;\n  if (!expectedError) {\n    toast.error('An unexpected error occurred.');\n  }\n  return Promise.reject(error);\n});\n\nconst getKeyValue = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(config.api + '/get-key-value', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getKeyValue: getKeyValue,\n  all: axios.all,\n  get: axios.get,\n  post: axios.post,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n","import { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst Select = ({ label, name, status, options, error, ...rest }) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const statusIcon =\n    status && status === 'loading' ? (\n      <span\n        className='spinner-border spinner-border-sm text-success d-inline-block'\n        style={{ marginLeft: '12px' }}\n        role='status'\n      >\n        <span className='visually-hidden'>Loading...</span>\n      </span>\n    ) : status && status === 'error' ? (\n      <span className='d-inline-block ml-5'>\n        <FontAwesomeIcon\n          icon={faExclamationTriangle}\n          style={{ marginLeft: '10px', color: 'red' }}\n        />\n      </span>\n    ) : (\n      ' '\n    );\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={name} className='form-label'>\n          {label}:{statusIcon}\n        </label>\n      )}\n      <select\n        name={name}\n        id={name}\n        className={error ? 'form-select is-invalid' : 'form-select'}\n        {...rest}\n      >\n        <option value=''>Select</option>\n        {options.map((option) => (\n          <option key={option.id} value={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <animated.div style={styles} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\n\nconst InputFile = ({ nameFile = 'key', onGetFile, ...rest }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: '.txt',\n  });\n  useEffect(() => {\n    if (onGetFile) onGetFile(acceptedFiles, nameFile);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [acceptedFiles]);\n\n  return (\n    <span {...getRootProps()} style={{ color: '#0d6efd' }}>\n      <input type='file' {...getInputProps()} {...rest} />\n      (File) <FontAwesomeIcon icon={faUpload} />\n    </span>\n  );\n};\nexport default InputFile;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nconst Clipboard = ({ refElement }) => {\n  const handleCopy = (ref) => {\n    ref.current.select();\n    document.execCommand('copy');\n    toast.success('Copied', {\n      autoClose: 1500,\n      hideProgressBar: true,\n    });\n  };\n\n  return (\n    <div className='bd-clipboard'>\n      <button\n        type='button'\n        className='btn-clipboard'\n        title=''\n        data-bs-original-title='Copy to clipboard'\n        onClick={(e) => handleCopy(refElement)}\n      >\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default Clipboard;\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Textarea = ({\n  label,\n  name,\n  error,\n  rows = 3,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txa = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}: {onGetFile && <InputFile onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txa} />}\n        <textarea\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          rows={rows}\n          ref={txa}\n          {...rest}\n        ></textarea>\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Textarea;\n"],"sourceRoot":""}