{"version":3,"sources":["components/hooks/AlgoSymmetric.jsx","services/advance.service.js","components/advanced/AdvancedFile.jsx","services/symmertric.service.js"],"names":["useAlgoSymmetric","useState","algorithms","setAlgorithms","status","setStatus","useEffect","a","getListAlgorithm","listAlgorithms","data","toast","error","apiEndpoint","api","getKeyValue","file","http","AdvancedFile","listMode","id","text","checked","downloadListRef","useRef","showIV","setShowIV","errors","setErrors","files","key","passphrase","isPublicKey","algorithm","symKey","isHexKey","isHexIv","values","setValues","encrypt","decrypt","statusLoading","setStatusLoading","downloadLinks","setDownloadLinks","percentage","setPercentage","progress","setProgress","keyLength","ivLength","sizeValues","setSizeValues","styleIV","useSpring","opacity","config","stiff","styleDownloadList","length","algo","find","cipher","hasOwnProperty","sizes","Number","handleChange","input","currentTarget","errorsData","validateProperty","FileAsymmetricAdvancedSchema","name","value","handleGeneator","property","mode","charAt","toUpperCase","slice","randomBytes","toString","generateRandomString","handleChecked","handleEncrypt","validateForm","console","log","payload","onUploadProgress","event","Math","round","loaded","total","uploadFilesAdvanced","response","dataLink","listDownloadFile","filter","some","item","fileName","scrollToRef","message","setTimeout","handleDecrypt","handleGetValue","className","style","paddingTop","FileUpload","onGetFiles","listFiles","Textarea","label","onGetFile","onChange","RadioButton","radios","Input","Select","options","nameFile","isHasCopy","isEnableGen","onGenerate","div","iv","Button","size","marginRight","isLoading","onClick","ref","DownloadList","list","onRemove","newFiles","splice","indexOf","onRemoveAll","KeyGenerator","get","encryptText","post","decryptText","encryptFile","uploadFilesSymmetric","decryptFile"],"mappings":"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","file":"static/js/9.c61ea169.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getListAlgorithm } from '../../services/symmertric.service';\nimport { toast } from 'react-toastify';\n\nconst useAlgoSymmetric = () => {\n  const [algorithms, setAlgorithms] = useState([]);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setStatus('loading');\n        const listAlgorithms = await getListAlgorithm();\n        setAlgorithms(listAlgorithms.data);\n        setStatus('done');\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n        setStatus('error');\n      }\n    })();\n  }, []);\n  return [status, algorithms];\n};\n\nexport { useAlgoSymmetric };\n","import http from './base-http.service';\nimport { uploadFilesAdvanced } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/asymmetric/advanced';\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAdvanced(\n    apiEndpoint + '/encrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesAdvanced(\n    apiEndpoint + '/decrypt/files',\n    payload,\n    onUploadProgress,\n  );\n};\n\nexport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport Textarea from '../common/Textarea';\nimport Select from '../common/Select';\nimport { FileAsymmetricAdvancedSchema } from '../../validations/asymmetric.schema';\nimport {\n  getKeyValue,\n  encryptFile,\n  decryptFile,\n} from '../../services/advance.service';\nimport KeyGenerator from '../asymmetric/KeyGenerator';\nimport { generateRandomString } from '../../utils/string.util';\nimport { randomBytes } from 'crypto';\nimport { useAlgoSymmetric } from '../hooks/AlgoSymmetric';\n\nconst AdvancedFile = () => {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listRadioKey = [\n    { id: 'publicKey', text: 'Public Key', checked: true },\n    { id: 'privateKey', text: 'Private Key', checked: false },\n  ];\n  const [status, algorithms] = useAlgoSymmetric();\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    passphrase: '',\n    isPublicKey: true,\n    algorithm: '',\n    symKey: '',\n    isHexKey: false,\n    isHexIv: false,\n  });\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n  const styleDownloadList = useSpring({\n    opacity: downloadLinks.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === values.algorithm);\n\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.algorithm]);\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricAdvancedSchema, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(FileAsymmetricAdvancedSchema, {\n      name,\n      value: data[name],\n    });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'publicKey';\n    setValues(data);\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleEncrypt = async () => {\n    const errors = validateForm(FileAsymmetricAdvancedSchema, values);\n    setErrors(errors || {});\n    console.log(errors);\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const response = await encryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const dataLink = [...downloadLinks];\n\n      //filter a file difference\n      const listDownloadFile = response.data.filter(\n        (file) => !dataLink.some((item) => file.fileName === item.fileName),\n      );\n\n      setDownloadLinks([...dataLink, ...listDownloadFile]);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    const errors = validateForm(FileAsymmetricAdvancedSchema, values);\n    setErrors(errors || {});\n    if (errors) return;\n    console.log(values);\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const response = await decryptFile(values, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const dataLink = [...downloadLinks];\n\n      //filter a file difference\n      const listDownloadFile = response.data.filter(\n        (file) => !dataLink.some((item) => file.fileName === item.fileName),\n      );\n\n      setDownloadLinks([...dataLink, ...listDownloadFile]);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleGetValue = async (files, name = 'key') => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data[name] = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n  return (\n    <>\n      <div className='container' style={{ paddingTop: '90px' }}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='card'>\n              <div className='card-header'>ADVANCED TOOL </div>\n              <div className='card-body'>\n                <div className='container' style={{ paddingTop: '0' }}>\n                  <form>\n                    <FileUpload\n                      error={errors['files']}\n                      percentage={percentage}\n                      progress={progress}\n                      onGetFiles={handleGetFiles}\n                    />\n                    <Textarea\n                      label='Public key/Private key'\n                      name='key'\n                      error={errors['key']}\n                      value={values.key}\n                      onGetFile={handleGetValue}\n                      onChange={handleChange}\n                    />\n                    <RadioButton\n                      name='isPublicKey'\n                      radios={listRadioKey}\n                      onChange={handleChecked}\n                    />\n                    <Input\n                      label='Passphrase'\n                      name='passphrase'\n                      error={errors['passphrase']}\n                      onChange={handleChange}\n                    />\n                    <Select\n                      label='Algorithm'\n                      name='algorithm'\n                      options={algorithms}\n                      status={status}\n                      error={errors['algorithm']}\n                      onChange={handleChange}\n                    />\n                    <Input\n                      label='Key Symmetric'\n                      name='symKey'\n                      value={values.symKey}\n                      error={errors['symKey']}\n                      nameFile='symKey'\n                      isHasCopy={values.symKey !== ''}\n                      onGetFile={handleGetValue}\n                      onChange={handleChange}\n                    />\n                    <RadioButton\n                      name='isHexKey'\n                      radios={listMode}\n                      onChange={handleChecked}\n                      isEnableGen={values.algorithm !== ''}\n                      onGenerate={() => handleGeneator('symKey', 'keyLength')}\n                    />\n                    {showIV && (\n                      <animated.div style={styleIV}>\n                        <Input\n                          label='Initial Vector'\n                          name='iv'\n                          value={values.iv}\n                          error={errors['iv']}\n                          isHasCopy={values.iv !== ''}\n                          onGetFile={handleGetValue}\n                          nameFile='iv'\n                          onChange={handleChange}\n                        />\n                        <RadioButton\n                          name='isHexIv'\n                          radios={listMode}\n                          onChange={handleChecked}\n                          isEnableGen={values.algorithm !== ''}\n                          onGenerate={() => handleGeneator('iv', 'ivLength')}\n                        />{' '}\n                      </animated.div>\n                    )}\n                    <div className='mb-3'>\n                      <Button\n                        text='Encrypt'\n                        size='btn-lg'\n                        style={{ marginRight: '10px' }}\n                        isLoading={statusLoading.encrypt}\n                        onClick={handleEncrypt}\n                      />\n                      <Button\n                        text='Decrypt'\n                        size='btn-lg'\n                        isLoading={statusLoading.decrypt}\n                        onClick={handleDecrypt}\n                      />\n                    </div>\n                    <span ref={downloadListRef}></span>\n                    {downloadLinks.length > 0 && (\n                      <animated.div style={styleDownloadList}>\n                        <DownloadList\n                          list={downloadLinks}\n                          onRemove={handleRemove}\n                          onRemoveAll={handleRemoveAll}\n                        />\n                      </animated.div>\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='col-md-4'>\n            <KeyGenerator />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdvancedFile;\n","import http from './base-http.service';\nimport { uploadFilesSymmetric } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/symmetric';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint + '/algorithms');\n};\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptText = (payload) => {\n  return http.post(apiEndpoint + '/encrypt/text', payload);\n};\n\nconst decryptText = (payload) => {\n  return http.post(apiEndpoint + '/decrypt/text', payload);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/encrypt/files', payload, onUploadProgress);\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/decrypt/files', payload, onUploadProgress);\n};\n\nexport {\n  getKeyValue,\n  getListAlgorithm,\n  encryptText,\n  decryptText,\n  encryptFile,\n  decryptFile,\n};\n"],"sourceRoot":""}