{"version":3,"sources":["validations/blowfish.schema.js","components/blowfish/BlowFishText.jsx","components/blowfish/BlowFishFile.jsx","components/blowfish/BlowFish.jsx","components/common/Button.jsx","utils/string.util.js","components/common/Input.jsx","components/common/Form.jsx","services/base-http.service.js","components/common/Select.jsx","components/common/InputFile.jsx","components/common/Clipboard.jsx","services/file.service.js","components/common/Textarea.jsx","components/common/RadioButton.jsx","services/symmertric.service.js","components/common/ProgressBar.jsx","components/common/FileUpload.jsx","components/common/ItemDownload.jsx","components/common/DownloadList.jsx"],"names":["message","name","isBuffer","length","typeMessage","calculatorLength","algorithms","values","algoInfo","find","cipher","id","mode","keyLength","ivLength","isHexKey","isHexIv","key","iv","isHasIV","hasOwnProperty","Buffer","alloc","toString","BaseSchema","schema","Joi","object","algorithm","string","required","messages","default","boolean","min","max","keys","optional","BlowFishFilesSchema","files","array","BlowFishTextSchema","text","BlowFishText","listMode","checked","useState","showIV","setShowIV","setAlgotithms","result","setResult","errors","setErrors","sizeValues","setSizeValues","setValues","encrypt","decrypt","statusLoading","setStatusLoading","styleIV","useSpring","opacity","useEffect","a","getListAlgorithm","listAlgorithms","data","toast","error","fetchData","algo","sizes","Number","schemaText","handleChange","input","currentTarget","errorsData","validateProperty","value","handleEncrypt","validateForm","payload","encryptText","response","setTimeout","handleDecrypt","decryptText","handleChecked","handleGeneator","property","charAt","toUpperCase","slice","randomBytes","generateRandomString","handleGetKeyValue","getKeyValue","className","Textarea","label","isHasCopy","onChange","Select","options","Input","onGetFile","RadioButton","radios","isEnableGen","onGenerate","div","style","keySize","Button","size","marginRight","isLoading","onClick","BlowFishFile","downloadListRef","useRef","downloadLinks","setDownloadLinks","percentage","setPercentage","progress","setProgress","config","stiff","schemaFiles","encryptFile","event","Math","round","loaded","total","listDownloadFile","filter","file","some","item","fileName","listDownload","scrollToRef","decryptFile","paddingTop","FileUpload","onGetFiles","listFiles","ref","DownloadList","list","onRemove","newFiles","splice","indexOf","onRemoveAll","BlowFish","tab","setTab","styleText","styleFile","handleChangeTab","color","rest","classBtn","type","disabled","role","aria-hidden","characters","i","push","floor","random","join","substring","formatBytes","bytes","decimals","k","dm","log","parseFloat","pow","toFixed","nameFile","styles","txt","htmlFor","refElement","extract","validate","details","abortEarly","path","window","scrollTo","top","current","offsetTop","left","behavior","axios","interceptors","use","status","staus","Promise","reject","formData","FormData","append","post","api","headers","all","get","patch","delete","statusIcon","marginLeft","icon","faExclamationTriangle","map","option","InputFile","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","faUpload","Clipboard","title","data-bs-original-title","e","select","document","execCommand","success","autoClose","hideProgressBar","uploadFilesSymmetric","url","onUploadProgress","forEach","index","http","uploadFilesAsymmetric","passphrase","isPublicKey","uploadFilesAdvanced","symKey","console","downloadFile","onDownloadProgress","responseType","rows","txa","radio","defaultChecked","apiEndpoint","ProgressBar","classProgress","width","aria-valuenow","aria-valuemin","aria-valuemax","setListFiles","styleError","styleListFiles","styleProgressBar","listTransitions","useTransition","gentle","from","height","transform","enter","leave","onDrop","useCallback","handleRemove","li","wordBreak","faFileUpload","faTimes","textAlign","faCloudUploadAlt","display","fontSize","ItemDownload","then","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","catch","err","faFileDownload","linkDownload"],"mappings":"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","file":"static/js/8.ded4a191.chunk.js","sourcesContent":["import Joi from 'joi';\n\nconst message = (name, isBuffer, length) => {\n  if (length === 0) return '\"algorithm\" is required';\n  const typeMessage = isBuffer ? 'hex characters' : 'bytes';\n  return `\"${name}\" is not valid. Key must be {#limit} ${typeMessage}`;\n};\n\nconst calculatorLength = (algorithms, values) => {\n  const algoInfo = algorithms.find(\n    (cipher) => cipher.id === `bf-${values.mode}`,\n  );\n  if (!algoInfo)\n    return { keyLength: 0, ivLength: 0, isHexKey: false, isHexIv: false };\n  const { key, isHexKey, iv, isHexIv } = values;\n  const isHasIV = algoInfo.hasOwnProperty('ivLength');\n\n  const keyLength =\n    key && isHexKey\n      ? Buffer.alloc(algoInfo.keyLength).toString('hex').length\n      : algoInfo.keyLength;\n\n  const ivLength =\n    iv && isHasIV && isHexIv // case has iv and iv is hex string\n      ? Buffer.alloc(algoInfo.ivLength).toString('hex').length\n      : isHasIV // case has iv and iv is normal string\n      ? algoInfo.ivLength\n      : 0;\n  return { keyLength, ivLength, isHexKey, isHexIv };\n};\n\nconst BaseSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  // Original Schema\n  const schema = Joi.object({\n    algorithm: Joi.string().required().messages({\n      'string.base': `\"algorithm\" should be a type of 'text'`,\n      'any.required': `\"algorithm' is not allowed to be empty`,\n    }),\n    mode: Joi.string().required().default('ecb'),\n    isHexKey: Joi.boolean().required(),\n    isHexIv: Joi.boolean(),\n    key: Joi.string()\n      .required()\n      .min(keyLength)\n      .max(keyLength)\n      // .when('isHexKey', {\n      //   is: true,\n      //   then: Joi.string().hex(),\n      // })\n\n      .messages({\n        'string.base': `\"key\" should be a type of 'text'`,\n        'string.max': message('key', isHexKey, keyLength),\n        'string.min': message('key', isHexKey, keyLength),\n        'string.hex': `\"key\" is not a valid hexadecimal string`,\n        'any.required': `\"key\" is not allowed to be empty`,\n      }),\n  });\n\n  if (ivLength === 0)\n    return schema.keys({\n      iv: Joi.optional(),\n    });\n  return schema\n    .keys({\n      iv: Joi.string().min(ivLength).max(ivLength),\n      // iv: Joi.when(isHexIv, {\n      //   is: Joi.exist().valid(true),\n      //   then: Joi.string().min(ivLength).max(ivLength).hex(),\n      //   otherwise: Joi.string().min(ivLength).max(ivLength),\n      // }),\n    })\n    .messages({\n      'string.base': `\"iv\" should be a type of 'text'`,\n      'string.max': message('iv', isHexIv),\n      'string.min': message('iv', isHexIv),\n      'string.hex': `\"iv\" is not a valid hexadecimal string`,\n      'any.required': `\"iv\" is not allowed to be empty`,\n    });\n};\n\nconst BlowFishFilesSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    files: Joi.array().min(1).required(),\n  });\n};\n\nconst BlowFishTextSchema = ({ keyLength, ivLength, isHexKey, isHexIv }) => {\n  return BaseSchema({ keyLength, ivLength, isHexKey, isHexIv }).keys({\n    text: Joi.string().required().messages({\n      'string.base': `\"text\" should be a type of 'text'`,\n      'any.required': `\"text\" is not allowed to be empty`,\n    }),\n  });\n};\n\nexport { calculatorLength, BlowFishTextSchema, BlowFishFilesSchema };\n","import React, { useState, useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Textarea from '../common/Textarea';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport {\n  getListAlgorithm,\n  getKeyValue,\n  encryptText,\n  decryptText,\n} from '../../services/symmertric.service';\nimport { calculatorLength, BlowFishTextSchema } from '../../validations/blowfish.schema';\n\nexport function BlowFishText() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'cfb', name: 'CFB' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [result, setResult] = useState('');\n  const [errors, setErrors] = useState({});\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    text: '',\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    mode: '',\n  });\n\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0 });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find(\n      (cipher) => cipher.id === `bf-${values.mode}`,\n    );\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.mode]);\n\n  const schemaText = BlowFishTextSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    else data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `bf-${values.mode}`\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      const payload = { ...values };\n      delete payload.mode;\n      const response = await encryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `bf-${values.mode}`\n    const errors = validateForm(schemaText, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      const payload = { ...values };\n      delete payload.mode;\n      const response = await decryptText(payload);\n      setResult(response.data);\n    } catch (error) {\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaText, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL BLOWFISH ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container'>\n          <form>\n            <Textarea\n              label='Text'\n              name='text'\n              error={errors['text']}\n              isHasCopy={values.text !== ''}\n              onChange={handleChange}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n             // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== '' && values.keySize !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />{' '}\n              </animated.div>\n            )}\n            <Textarea\n              label='Result'\n              name='result'\n              value={result}\n              isHasCopy={result !== ''}\n              onChange={() => {}}\n            />\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaText, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlowFishText;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated, config } from 'react-spring';\nimport { toast } from 'react-toastify';\nimport Select from '../common/Select';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\nimport RadioButton from '../common/RadioButton';\nimport { randomBytes } from 'crypto';\nimport { validateProperty, validateForm, scrollToRef } from '../common/Form';\nimport { generateRandomString } from '../../utils/string.util';\nimport FileUpload from '../common/FileUpload';\nimport DownloadList from '../common/DownloadList';\nimport {\n  getListAlgorithm,\n  encryptFile,\n  decryptFile,\n  getKeyValue,\n} from '../../services/symmertric.service';\nimport {\n  calculatorLength,\n  BlowFishFilesSchema,\n} from '../../validations/blowfish.schema';\n\nfunction BlowFishFile() {\n  const listMode = [\n    { id: 'textMode', text: 'Text', checked: true },\n    { id: 'hexMode', text: 'Hex', checked: false },\n  ];\n  const listModeCipher = [\n    { id: 'ecb', name: 'ECB' },\n    { id: 'cfb', name: 'CFB' },\n    { id: 'ofb', name: 'OFB' },\n    { id: 'cbc', name: 'CBC' },\n  ];\n  const downloadListRef = useRef(null);\n  const [showIV, setShowIV] = useState(false);\n  const [algorithms, setAlgotithms] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [downloadLinks, setDownloadLinks] = useState([]);\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Upload');\n  const [statusLoading, setStatusLoading] = useState({\n    encrypt: false,\n    decrypt: false,\n  });\n  const [sizeValues, setSizeValues] = useState({\n    keyLength: 0,\n    ivLength: 0,\n  });\n  const [values, setValues] = useState({\n    files: [],\n    key: '',\n    iv: '',\n    isHexKey: false,\n    isHexIv: false,\n    mode: '',\n  });\n\n  const styleIV = useSpring({ opacity: showIV ? 1 : 0, config: config.stiff });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const listAlgorithms = await getListAlgorithm();\n        setAlgotithms(listAlgorithms.data);\n      } catch (error) {\n        toast.error('Can not get list algorithms');\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const algo = algorithms.find((cipher) => cipher.id === `bf-${values.mode}`);\n    if (algo) {\n      setShowIV(algo.hasOwnProperty('ivLength'));\n\n      const sizes = { ...sizeValues };\n      sizes['keyLength'] = Number(algo.keyLength);\n      sizes['ivLength'] = Number(algo.ivLength) || 0;\n      setSizeValues(sizes);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.mode]);\n\n  const schemaFiles = BlowFishFilesSchema(calculatorLength(algorithms, values));\n\n  const handleChange = ({ currentTarget: input }) => {\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, input);\n    if (error) errorsData[input.name] = error;\n    else delete errorsData[input.name];\n    setErrors(errorsData);\n    const data = { ...values };\n    if (input.name === 'file') data[input.name] = input.files[0];\n    data[input.name] = input.value;\n    setValues(data);\n  };\n\n  const handleEncrypt = async () => {\n    values.algorithm = `bf-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, encrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await encryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, encrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleDecrypt = async () => {\n    values.algorithm = `bf-${values.mode}`;\n    const errors = validateForm(schemaFiles, values);\n    setErrors(errors || {});\n    if (errors) return;\n    try {\n      setStatusLoading({ ...statusLoading, decrypt: true });\n      setProgress('Uploading...');\n      const payload = { ...values };\n      delete payload.keySize;\n      delete payload.mode;\n      const response = await decryptFile(payload, (event) => {\n        setPercentage(Math.round((100 * event.loaded) / event.total));\n      });\n      setProgress('Done');\n      const listDownloadFile = response.data.filter(\n        (file) =>\n          !downloadLinks.some((item) => file.fileName === item.fileName),\n      );\n      const listDownload = [...listDownloadFile, ...downloadLinks];\n      setDownloadLinks(listDownload);\n      scrollToRef(downloadListRef);\n    } catch (error) {\n      setProgress('Error');\n      if (error.response) {\n        const { message } = error.response.data;\n        toast.error(message);\n      }\n    } finally {\n      setTimeout(\n        () => setStatusLoading({ ...statusLoading, decrypt: false }),\n        500,\n      );\n    }\n  };\n\n  const handleChecked = ({ currentTarget: input }) => {\n    const { id, name } = input;\n    const data = { ...values };\n    data[name] = id === 'hexMode';\n    setValues(data);\n  };\n\n  const handleGeneator = (name, property) => {\n    const data = { ...values };\n    const mode = `isHex${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    data[name] = values[mode]\n      ? randomBytes(sizeValues[property]).toString('hex')\n      : generateRandomString(sizeValues[property]);\n    const errorsData = { ...errors };\n    const error = validateProperty(schemaFiles, { name, value: data[name] });\n    if (error) errorsData[name] = error;\n    else delete errorsData[name];\n    setErrors(errorsData);\n    setValues(data);\n  };\n\n  const handleGetKeyValue = async (files) => {\n    if (files.length > 0) {\n      try {\n        const data = { ...values };\n        const response = await getKeyValue(files[0]);\n        data.key = response.data;\n        setValues(data);\n      } catch (error) {\n        if (error.response) {\n          const { message } = error.response.data;\n          toast.error(message);\n        }\n      }\n    }\n  };\n\n  const handleGetFiles = (files) => {\n    const data = { ...values };\n    const listFiles = [...files];\n    data.files = listFiles;\n    setValues(data);\n    setPercentage(0);\n    setProgress('Upload');\n  };\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...downloadLinks];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setDownloadLinks(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setDownloadLinks([]);\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>TOOL AES ENCRYPT</div>\n      <div className='card-body'>\n        <div className='container' style={{ paddingTop: '0' }}>\n          <form>\n            <FileUpload\n              error={errors['files']}\n              percentage={percentage}\n              progress={progress}\n              onGetFiles={handleGetFiles}\n            />\n            <Select\n              label='Mode'\n              name='mode'\n              options={listModeCipher}\n              // defaultValue={values.mode}\n              error={errors['mode']}\n              onChange={handleChange}\n            />\n            <Input\n              label='Key'\n              name='key'\n              value={values.key}\n              error={errors['key']}\n              isHasCopy={values.key !== ''}\n              onGetFile={handleGetKeyValue}\n              onChange={handleChange}\n            />\n            <RadioButton\n              name='isHexKey'\n              radios={listMode}\n              onChange={handleChecked}\n              isEnableGen={values.mode !== ''}\n              onGenerate={() => handleGeneator('key', 'keyLength')}\n            />\n            {showIV && (\n              <animated.div style={styleIV}>\n                <Input\n                  label='Initial Vector'\n                  name='iv'\n                  value={values.iv}\n                  error={errors['iv']}\n                  isHasCopy={values.iv !== ''}\n                  onChange={handleChange}\n                />\n                <RadioButton\n                  name='isHexIv'\n                  radios={listMode}\n                  onChange={handleChecked}\n                  isEnableGen={values.mode !== ''}\n                  onGenerate={() => handleGeneator('iv', 'ivLength')}\n                />\n              </animated.div>\n            )}\n            <div className='mb-3'>\n              <Button\n                text='Encrypt'\n                size='btn-lg'\n                style={{ marginRight: '10px' }}\n                isLoading={statusLoading.encrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleEncrypt}\n              />\n              <Button\n                text='Decrypt'\n                size='btn-lg'\n                isLoading={statusLoading.decrypt}\n                //disabled={validateForm(schemaFiles, values) !== null}\n                onClick={handleDecrypt}\n              />\n            </div>\n            <span ref={downloadListRef}></span>\n            {downloadLinks.length > 0 && (\n              <DownloadList\n                list={downloadLinks}\n                onRemove={handleRemove}\n                onRemoveAll={handleRemoveAll}\n              />\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlowFishFile;\n","import { React, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport BlowFishText from './BlowFishText';\nimport BlowFishFile from './BlowFishFile';\n\nfunction BlowFish() {\n  const [tab, setTab] = useState(false);\n  const styleText = useSpring({ opacity: tab ? 0 : 1 });\n  const styleFile = useSpring({ opacity: tab ? 1 : 0 });\n  const handleChangeTab = () => {\n    setTab(!tab);\n  };\n\n  return (\n    <>\n      <div className='container' style={{paddingTop: '90px'}}>\n        <div className='row justify-content-center'>\n          <div className='col-md-6'>\n            <div className='nav-tab'>\n              <nav className='nav nav-pills nav-fill'>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (!tab ? ' active' : '')}\n                >\n                  Text\n                </button>\n                <button\n                  onClick={handleChangeTab}\n                  className={'nav-link' + (tab ? ' active' : '')}\n                >\n                  File\n                </button>\n              </nav>\n            </div>\n            {!tab ? (\n              <animated.div style={styleText}>\n                <BlowFishText />{' '}\n              </animated.div>\n            ) : (\n              <animated.div style={styleFile}>\n                <BlowFishFile />\n              </animated.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default BlowFish;\n","const Button = ({\n  text,\n  color = 'primary',\n  size = '',\n  isLoading = false,\n  ...rest\n}) => {\n  if (size) size = ' ' + size;\n  const classBtn = `btn btn-${color}${size}`;\n  return (\n    <>\n      {isLoading ? (\n        <button className={classBtn} style={{ marginRight: '10px' }} type='button' disabled>\n          <span\n            className='spinner-border spinner-border-sm'\n            role='status'\n            aria-hidden='true'\n          ></span>\n          {' '}Loading...\n        </button>\n      ) : (\n        <button type='button' className={classBtn} {...rest}>\n          {text}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","function generateRandomString(length) {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < characters.length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length)),\n    );\n  }\n  return result.join('').substring(0, length);\n}\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport { generateRandomString, formatBytes };\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Input = ({\n  label,\n  name,\n  type = 'text',\n  error,\n  nameFile,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txt = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}:{' '}\n          {onGetFile && <InputFile nameFile={nameFile} onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txt} />}\n        <input\n          type={type}\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          ref={txt}\n          {...rest}\n        />\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Input;\n","const validateProperty = (schema, { name, value }) => {\n  const schemaProperty = schema.extract(name);\n  const { error } = schemaProperty.validate(value);\n  return error ? error.details[0].message : null;\n};\n\nconst validateForm = (schema, data) => {\n  const options = { abortEarly: false };\n  const { error } = schema.validate(data, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n};\n\nconst scrollToRef = (ref) => {\n  setTimeout(() => {\n    ref &&\n      window.scrollTo({\n        top: ref.current.offsetTop,\n        left: 0,\n        behavior: 'smooth',\n      });\n  }, 500);\n};\n\nexport { validateProperty, validateForm, scrollToRef };\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport config from '../config/default.json';\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.staus < 500;\n  if (!expectedError) {\n    toast.error('An unexpected error occurred.');\n  }\n  return Promise.reject(error);\n});\n\nconst getKeyValue = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(config.api + '/get-key-value', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getKeyValue: getKeyValue,\n  all: axios.all,\n  get: axios.get,\n  post: axios.post,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n","import { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst Select = ({ label, name, status, options, error, ...rest }) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const statusIcon =\n    status && status === 'loading' ? (\n      <span\n        className='spinner-border spinner-border-sm text-success d-inline-block'\n        style={{ marginLeft: '12px' }}\n        role='status'\n      >\n        <span className='visually-hidden'>Loading...</span>\n      </span>\n    ) : status && status === 'error' ? (\n      <span className='d-inline-block ml-5'>\n        <FontAwesomeIcon\n          icon={faExclamationTriangle}\n          style={{ marginLeft: '10px', color: 'red' }}\n        />\n      </span>\n    ) : (\n      ' '\n    );\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={name} className='form-label'>\n          {label}:{statusIcon}\n        </label>\n      )}\n      <select\n        name={name}\n        id={name}\n        className={error ? 'form-select is-invalid' : 'form-select'}\n        {...rest}\n      >\n        <option value=''>Select</option>\n        {options.map((option) => (\n          <option key={option.id} value={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <animated.div style={styles} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\n\nconst InputFile = ({ nameFile = 'key', onGetFile, ...rest }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: '.txt',\n  });\n  useEffect(() => {\n    if (onGetFile) onGetFile(acceptedFiles, nameFile);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [acceptedFiles]);\n\n  return (\n    <span {...getRootProps()} style={{ color: '#0d6efd' }}>\n      <input type='file' {...getInputProps()} {...rest} />\n      (File) <FontAwesomeIcon icon={faUpload} />\n    </span>\n  );\n};\nexport default InputFile;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nconst Clipboard = ({ refElement }) => {\n  const handleCopy = (ref) => {\n    ref.current.select();\n    document.execCommand('copy');\n    toast.success('Copied', {\n      autoClose: 1500,\n      hideProgressBar: true,\n    });\n  };\n\n  return (\n    <div className='bd-clipboard'>\n      <button\n        type='button'\n        className='btn-clipboard'\n        title=''\n        data-bs-original-title='Copy to clipboard'\n        onClick={(e) => handleCopy(refElement)}\n      >\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default Clipboard;\n","import http from './base-http.service';\n\nconst uploadFilesSymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('algorithm', payload.algorithm);\n  formData.append('key', payload.key);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAsymmetric = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst uploadFilesAdvanced = (url, payload, onUploadProgress) => {\n  const formData = new FormData();\n  payload.files.forEach((file, index) => formData.append(`files[${index}]`, file));\n  formData.append('key', payload.key);\n  formData.append('passphrase', payload.passphrase);\n  formData.append('isPublicKey', payload.isPublicKey);\n  formData.append('algorithm', payload.algorithm);\n  formData.append('symKey', payload.symKey);\n  formData.append('iv', payload.iv);\n  formData.append('isHexKey', payload.isHexKey);\n  formData.append('isHexIv', payload.isHexIv);\n  console.log(formData)\n  return http.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress\n  });\n};\n\nconst downloadAllFile = (urls) => {\n  const request = urls.map((url) => downloadFile(url));\n  return http.all(request);\n};\n\nconst downloadFile = (url, onDownloadProgress) => {\n  return http.get(url, {\n    responseType: 'blob',\n    onDownloadProgress,\n  });\n};\nexport { uploadFilesSymmetric, uploadFilesAsymmetric, uploadFilesAdvanced, downloadFile, downloadAllFile };\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport InputFile from './InputFile';\nimport Clipboard from './Clipboard';\n\nconst Textarea = ({\n  label,\n  name,\n  error,\n  rows = 3,\n  onGetFile,\n  isHasCopy = false,\n  ...rest\n}) => {\n  const styles = useSpring({ opacity: error ? 1 : 0 });\n  const txa = useRef(null);\n\n  return (\n    <>\n      <div className='mb-3'>\n        <label htmlFor={name} className='form-label'>\n          {label}: {onGetFile && <InputFile onGetFile={onGetFile} />}\n        </label>\n        {isHasCopy && <Clipboard refElement={txa} />}\n        <textarea\n          className={error ? 'form-control is-invalid' : 'form-control'}\n          name={name}\n          id={name}\n          rows={rows}\n          ref={txa}\n          {...rest}\n        ></textarea>\n        {error && (\n          <animated.div style={styles} className='invalid-feedback d-block'>\n            {error}\n          </animated.div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Textarea;\n","import React from 'react';\nimport Button from './Button';\n\nfunction RadioButton({ name, radios, isEnableGen, onGenerate, ...rest }) {\n  return (\n    <div className='d-flex justify-content-between mb-3'>\n      <span className='text-left'>\n        {radios.map((radio) => (\n          <div key={radio.id} className='form-check form-check-inline'>\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              id={radio.id}\n              value={radio.checked}\n              defaultChecked={radio.checked}\n              {...rest}\n            />\n            <label className='form-check-label' htmlFor={radio.id}>\n              {radio.text}\n            </label>\n          </div>\n        ))}\n      </span>\n\n      {onGenerate && (\n        <span className='text-right'>\n          <Button\n            color='outline-primary btn-sm'\n            onClick={onGenerate}\n            text='Generate Random'\n            disabled={!isEnableGen}\n          />\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default RadioButton;\n","import http from './base-http.service';\nimport { uploadFilesSymmetric } from './file.service';\nimport config from '../config/default.json';\n\nconst apiEndpoint = config.api + '/symmetric';\n\nconst getListAlgorithm = () => {\n  return http.get(apiEndpoint + '/algorithms');\n};\n\nconst getKeyValue = (file) => {\n  return http.getKeyValue(file);\n};\n\nconst encryptText = (payload) => {\n  return http.post(apiEndpoint + '/encrypt/text', payload);\n};\n\nconst decryptText = (payload) => {\n  return http.post(apiEndpoint + '/decrypt/text', payload);\n};\n\nconst encryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/encrypt/files', payload, onUploadProgress);\n};\n\nconst decryptFile = (payload, onUploadProgress) => {\n  return uploadFilesSymmetric(apiEndpoint + '/decrypt/files', payload, onUploadProgress);\n};\n\nexport {\n  getKeyValue,\n  getListAlgorithm,\n  encryptText,\n  decryptText,\n  encryptFile,\n  decryptFile,\n};\n","import React from 'react'\n\nconst ProgressBar = ({ percentage, progress, ...rest }) => {\n  const classProgress = progress === 'Error' ? 'progress-bar progress-bar-striped bg-danger' : (\n    percentage < 100 ? 'progress-bar progress-bar-striped bg-primary' :\n      'progress-bar bg-success'\n  );\n\n  return (\n    <div className='progress' {...rest}>\n      <div\n      className={classProgress}\n      role='progressbar'\n      style={{ width: percentage + '%' }}\n      aria-valuenow={percentage}\n      aria-valuemin='0'\n      aria-valuemax='100'\n    >\n      {percentage}%\n    </div>\n  </div>\n  )\n}\nexport default ProgressBar;","import { React, useState, useCallback, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\nimport { useSpring, useTransition, animated, config } from 'react-spring';\nimport { formatBytes } from '../../utils/string.util';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloudUploadAlt,\n  faFileUpload,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst FileUpload = ({ error, percentage, progress, onGetFiles }) => {\n  const [listFiles, setListFiles] = useState([]);\n  const styleError = useSpring({\n    opacity: error ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleListFiles = useSpring({\n    opacity: listFiles.length > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const styleProgressBar = useSpring({\n    opacity: percentage > 0 ? 1 : 0,\n    config: config.stiff,\n  });\n  const listTransitions = useTransition(listFiles, {\n    config: config.gentle,\n    from: { opacity: 0, height: 0, transform: 'translate3d(-25%, 0px, 0px)' },\n    enter: { opacity: 1, height: 45, transform: 'translate3d(0%, 0px, 0px)' },\n    leave: { opacity: 0, height: 0, transform: 'translate3d(25%, 0px, 0px)' },\n    keys: listFiles.map((file) => file.path),\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onDrop = useCallback((acceptedFiles) => {\n    setListFiles([...acceptedFiles]);\n  });\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  useEffect(() => {\n    onGetFiles(listFiles);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listFiles]);\n\n  const handleRemove = (file) => () => {\n    const newFiles = [...listFiles];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setListFiles(newFiles);\n  };\n\n  const handleRemoveAll = () => {\n    setListFiles([]);\n  };\n\n  const files = (\n    <ul className='list-group'>\n      {listTransitions((styles, file) => (\n        <animated.li style={styles} className='list-group-item d-inline-flex'>\n          <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n            <FontAwesomeIcon\n              icon={faFileUpload}\n              style={{ marginRight: '10px' }}\n            />\n            {file.path} - {formatBytes(file.size)}\n          </span>\n          <span className='item-close ml-3'>\n            {' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={handleRemove(file)}\n              style={{ marginLeft: '10px' }}\n            />\n          </span>\n        </animated.li>\n      ))}\n    </ul>\n  );\n\n  const formatNameFiles = (list) => (list.length > 1 ? 'Files' : 'File');\n\n  return (\n    <>\n      <div {...getRootProps({ className: 'dropzone mb-3' })}>\n        <div className='dz-message d-flex flex-column'>\n          <input {...getInputProps()} />\n          <span style={{ textAlign: 'center' }}>\n            <FontAwesomeIcon icon={faCloudUploadAlt} size='5x' />\n          </span>\n          Drag &amp; Drop here or click\n        </div>\n      </div>\n      {(error && listFiles.length === 0) && (\n        <animated.div style={styleError} className='invalid-feedback d-block'>\n          {error}\n        </animated.div>\n      )}\n      {listFiles.length > 0 && (\n        <animated.div style={styleListFiles} className='list-files'>\n          <div className='d-flex'>\n            <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n              {formatNameFiles(listFiles)}\n              <small>\n                ({listFiles.length} file{listFiles.length > 1 && 's'})\n              </small>\n              {percentage > 0 && (\n                <p style={{ fontSize: '16px' }}>\n                  Progress:{' '}\n                  <span\n                    className={\n                      progress === 'Error'\n                        ? 'ml-3 text-danger'\n                        : 'ml-3 mr-3 text-success'\n                    }\n                  >\n                    {progress}{' '}\n                    {percentage < 100 && (\n                      <span\n                        className='spinner-border spinner-border-sm text-success'\n                        role='status'\n                      >\n                        <span className='visually-hidden'>Loading...</span>\n                      </span>\n                    )}\n                  </span>\n                </p>\n              )}\n            </h5>\n            <div>\n              <Button\n                text='Clear All'\n                color='outline-success btn-sm btn-block'\n                size='btn-sm'\n                onClick={handleRemoveAll}\n              />\n            </div>\n          </div>\n          <animated.div style={styleProgressBar} className='mb-3'>\n            {percentage > 0 && (\n              <ProgressBar percentage={percentage} progress={progress} />\n            )}\n          </animated.div>\n          <aside className='mb-3'>{files}</aside>\n        </animated.div>\n      )}\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { downloadFile } from '../../services/file.service';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\n\nconst ItemDownload = ({ name, url }) => {\n  const [percentage, setPercentage] = useState(0);\n  const [progress, setProgress] = useState('Download');\n\n  const handleDownload = () => {\n    setPercentage(0);\n    downloadFile(url, (event) => {\n      setPercentage(Math.round((100 * event.loaded) / event.total));\n    })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', name);\n        document.body.appendChild(link);\n        link.click();\n        setProgress('Done');\n      })\n      .catch((err) => {\n        setProgress('Error');\n        toast.error(err);\n      });\n  };\n\n  const classBtn =\n    progress === 'Error'\n      ? 'danger btn-sm'\n      : progress === 'Done'\n      ? 'success btn-sm'\n      : 'outline-success btn-sm';\n  return (\n    <div className='d-flex justify-content-between align-items-center'>\n      <div className='flex-grow-1'>\n        <ProgressBar\n          percentage={percentage}\n          progress={progress}\n          style={{ width: 96 + '%' }}\n        />\n      </div>\n      <div>\n        <Button text={progress} color={classBtn} onClick={handleDownload} disabled={progress === 'Done'} />\n      </div>\n    </div>\n  );\n};\nexport default ItemDownload;\n","import React from 'react';\nimport Button from './Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { formatBytes } from '../../utils/string.util';\nimport ItemDownload from '../common/ItemDownload';\n\nconst DownloadList = ({ list, onRemove, onRemoveAll }) => {\n  return (\n    <>\n      <div className='d-flex mb-3'>\n        <h5 className='flex-grow-1' style={{ display: 'inline-block' }}>\n          Result Files:\n        </h5>\n        <Button\n          text='Clear All'\n          color='outline-success'\n          size='btn-sm'\n          onClick={onRemoveAll}\n        />\n      </div>\n      <ul className='list-group'>\n        {list.map((file) => (\n          <li key={file.linkDownload} className='list-group-item'>\n            <div className='d-flex justify-content-between w-100 mb-2'>\n              <span className='flex-grow-1' style={{ wordBreak: 'break-all' }}>\n                <FontAwesomeIcon\n                  icon={faFileDownload}\n                  style={{ marginRight: '10px' }}\n                />\n                {file.fileName} - {formatBytes(file.size)}\n              </span>\n              <span className='item-close ml-3'>\n                {' '}\n                <FontAwesomeIcon\n                  icon={faTimes}\n                  onClick={onRemove(file)}\n                  style={{ marginLeft: '10px' }}\n                />\n              </span>\n            </div>\n            <ItemDownload name={file.fileName} url={file.linkDownload} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default DownloadList;\n"],"sourceRoot":""}